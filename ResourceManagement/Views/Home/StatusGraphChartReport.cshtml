@model ResourceManagement.Models.GraphChartModel

@if (Model == null && Model.ViewModel == null && Model.ViewModel.Count == 0)
{
    return;
}
@{
    int i = 1;
}

@foreach (var chartModel in Model.ViewModel)
{
    var chart1Name = "chart1Container" + i;
    var chart2Name = "chart2Container" + i;
    var chart3Name = "chart3Container" + i;
    var chart4Name = "chart4Container" + i;
    var chart5Name = "chart5Container" + i;
    var chart6Name = "chart6Container" + i;
    var chart7Name = "chart7Container" + i;
    i++;

    <div class="" style="background-color: white; color: #2167ae;">
        <br />
        <img src="~/Assets/AMBC_Logo.png" alt="Header Logo" style="margin-left: 20px !important;  height: 70px !important; margin-top: -10px !important;width: 200px !important" />
        @{
            var clientLogo = "";
            if (chartModel.AMBC_Active_Emp_view.Client != "AMBC")
            {
                clientLogo = "/Assets/ClientLogos/" + chartModel.AMBC_Active_Emp_view.Client + ".png";
            }
        }
        @if (clientLogo != "")
        {
            <img src='@clientLogo' style="float: right !important; margin-right: 20px !important; height: 70px !important; margin-top: -10px !important; width: 200px !important" />
        }

        <br />

        <div class="report-banner">
            <div class="banner-wrapper">
                <div class="banner-media">
                    <div class="banner-image__circle">
                        <figure>
                            <img src="@chartModel.EmployeeImage" class="banner-img" width="170" height="170" />
                        </figure>
                        <p class="banner-empname">@chartModel.AMBC_Active_Emp_view.Employee_Name</p>
                    </div>
                    <div class="banner-decoration">
                        @*<div class="banner-decoration__elements">*@
                        <span class="banner-decoration__circle"></span>
                        <span class="banner-decoration__half-mask">
                            <span class="banner-decoration__half-mask__circle bg-height">
                            </span>
                        </span>
                        <span class="banner-decoration__mini-circle bg-height"></span>
                        @*</div>*@
                    </div>
                </div>
                <div class="banner-content">
                    <div style="padding-top: 30px;">
                        <div>
                            <h2 style="font-size: xx-large; color: #23366f !important ">
                                @chartModel.AMBC_Active_Emp_view.Client_Project_Name
                            </h2>
                            <h5 style="color: #23366f !important ">
                                Project Status Report as of: <b style="font-size: initial; color: floralwhite !important; margin-left: 5px !important">  @Model.SelectedReportMonth.MonthName @Model.SelectedReportMonth.MonthEndDate@Model.SelectedReportMonth.Suffix, @Model.SelectedReportMonth.year</b>
                            </h5>

                            <h5 style="color: #23366f !important; margin-left: 72px !important">
                                Report Period: <b style="font-size: initial; color: floralwhite !important; margin-left: 5px !important">  @Model.SelectedReportMonth.ReportStartMonth to @Model.SelectedReportMonth.MonthName</b>
                            </h5>

                            <div style="display: none" class="page-name-title-updated">Status Report - @chartModel.AMBC_Active_Emp_view.Employee_Name @Model.SelectedReportMonth.MonthName @Model.SelectedReportMonth.MonthEndDate@Model.SelectedReportMonth.Suffix, @Model.SelectedReportMonth.year</div>

                        </div>

                    </div>

                    <hr class="employeeinfohr" style="background-color: red !important; height: 2px !important; width: 75% !important; margin-left: 0px !important; margin-top: 15px !important;" />

                    <div class="report-content-resource">
                        <br />
                        <div class="employeeInfo">  <img src="~/Assets/Icons/email-new.png" width="25" /><div class="empPersonelInfoe"><b style="color: #23366f !important ">@chartModel.AMBC_Active_Emp_view.AMBC_Mail_Address</b> </div></div>
                        <div class="employeeInfo">
                            <img src="~/Assets/Icons/phone-call.png" width="20" /><div class="empPersonelInfoe"><b style="color: #23366f !important ">@chartModel.AMBC_Active_Emp_view.Contact_Number</b></div>
                        </div>

                        <div class="employeeInfo">
                            <img src="~/Assets/Icons/project-management.png" width="25" /><div class="empPersonelInfoe">
                                <b style="color: #23366f !important ">@chartModel.AMBC_Active_Emp_view.Client_Report_Manager</b>
                            </div>
                        </div>

                        <div class="employeeInfo" style="color: white !important;">
                            <div id="circle">
                                <p style="text-align: center !important; position: absolute !important; margin-left: 25px !important; margin-top: 20px !important; font-size: x-large !important; color: #23366f !important; "><b style="color: #23366f !important ">@chartModel.EmaployeeAvailabity %</b><div style="margin-top: 60px !important; position: absolute !important; margin-left: 18px !important; color: #23366f !important "><b style="color: #23366f !important ">Attendence</b></div></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="report-activity">
            <h2><b style="color: rgb(0, 128, 128) !important">Activity Details</b></h2>
            <ul class="mt-xl-4">
                @{
                    var activitesDetails = chartModel.AMBC_Active_Emp_view.Roles_Responsibilities;
                }

                @if (!string.IsNullOrWhiteSpace(activitesDetails))
                {
                    foreach (var activity in activitesDetails.Split('|'))
                    {
                        <li class="" style="color: rgb(0, 128, 128) !important ">@activity</li>
                    }
                }

            </ul>
        </div>
    </div>

    <br />

    <div style="background-color: none; padding-top: 30px !important" />

    var hideIncidentReport = "";
    if (Model.IsIncidentReportExists == false)
    {
        hideIncidentReport = "hide";
    }

    <div class="@chart1Name chartdiv @hideIncidentReport">
        <div id="@chart1Name" class="chartimagediv" style="height: 230px; width: 60%; display: inline-block; margin-left: 150px;"></div><p class="chartparah" style="position: absolute; margin-left: 735px; margin-top: -55px; color: #0095a8 !important; font-size: medium; font-family: cursive; font-size: larger ">Overall Ticket Run rate ~@Html.Raw(chartModel.Graph1OverallStatus)</p>
        <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>
    </div>

    <div class="@chart2Name chartdiv @hideIncidentReport">
        <div id="@chart2Name" class="chartimagediv" style="height: 230px; width: 60%; display: inline-block; margin-left: 150px;"></div><p class="chartparah" style="position: absolute; margin-left: 735px; margin-top: -65px; color: #3b5998 !important; font-size: medium; font-family: cursive; font-size: larger ">
            @Html.Raw(chartModel.Graph2OverallStatus)
        </p>
        <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>
    </div>
    <div class="@chart3Name chartdiv @hideIncidentReport">
        <div id="@chart3Name" class="chartimagediv" style="width: 60%; height: 230px; display: inline-block; margin-left: 150px; "></div><p class="chartparah3" style="position: absolute; margin-left: 762px; margin-top: -51px; color: #005983 !important; font-size: medium; font-family: cursive; font-size: larger ">@Html.Raw(chartModel.Graph3OverallStatus)</p>
        <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>
    </div>

    <div class="container @hideIncidentReport">
        <div class="row">
            <div class="col @chart4Name chartdiv multplechartdiv">

                <div id="@chart4Name" class="chartimagedivmultiple" style="height: 230px; width: 400px; display: inline-block; padding-left: 0px;"></div><p class="multiplechartparah" style="position: absolute; margin-left: 85px; margin-top: 5px; color: rgb(0, 128, 128) !important; font-size: medium; font-family: cursive; font-size: larger; width: 330px;">@Html.Raw(chartModel.Graph4OverallStatus)</p>
                <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>

            </div>
            <div class="col @chart5Name chartdiv">

                <div id="@chart5Name" class="chartimagedivmultiple" style="height: 230px; width: 400px; display: inline-block;"></div><p class="multiplechartparah" style="position: absolute; margin-left: 85px; margin-top: 5px; color: rgb(74, 172, 197) !important; font-size: medium; font-family: cursive; font-size: larger; width: 330px; ">@Html.Raw(chartModel.Graph5OverallStatus)</p>
                <div style="background-color: white; padding-top: 30px; text-align: center; margin-bottom: 30px; margin-left: 150px; margin-right: 150px "><h2 class="chartbelowhrline" style="margin-left: -70px"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>

            </div>
        </div>
    </div>

    var hideProjectReport = "";
    if (Model.IsProjectReportExists == false)
    {
        hideProjectReport = "hide";
    }

    <div class="@chart6Name chartdiv @hideProjectReport">
        <div id="@chart6Name" class="chartimagediv" style="width: 75%; height: @chartModel.ProjectReportHeight; display: inline-block; margin-left: 100px; "></div>
        <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>
    </div>

    var hideAuditReport = "";
    if (Model.IsAuditReportExists == false)
    {
        hideAuditReport = "hide";
    }

    <div class="@chart7Name chartdiv @hideAuditReport">
        <div id="@chart7Name" class="chartimagediv" style="width: 60%; height: 230px; display: inline-block; margin-left: 150px; "></div><p class="chartparah7" style="position: absolute; margin-left: 762px; margin-top: -51px; color: #005983 !important; font-size: medium; font-family: cursive; font-size: larger "></p>
        <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>
    </div>


    <div style="text-align: center; color: white !important; background-color: #2167ae !important; height: 75px; border-radius: 0px; padding-top: 10px;margin-top: 100px">
        <div style=" text-align:center"><b style="font-size: xx-large; color: white !important;">Thank you...!</b></div>
    </div>

    <div class="sticky-container">
        <ul class="sticky">
            <li style="background-color: #0095a8; color: white; font-weight: bold " class="@hideIncidentReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/bar-graph.png" />
                <p class="chartshowhide" data-target="@chart1Name">HIDE</p>
            </li>
            <li style="background-color: #3b5998; color: white; font-weight: bold " class="@hideIncidentReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/ClosureTrend.png" />
                <p class="chartshowhide" data-target="@chart2Name">HIDE</p>
            </li>
            <li style="background-color: #005983; color: white; font-weight: bold " class="@hideIncidentReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/Open-Tickets.png" />
                <p class="chartshowhide" data-target="@chart3Name">HIDE</p>
            </li>
            <li style="background-color: rgb(0, 128, 128); color: white; font-weight: bold " class="@hideIncidentReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/Closure-Trend.png" />
                <p class="chartshowhide" data-target="@chart4Name">HIDE</p>
            </li>
            <li style="background-color: rgb(74, 172, 197); color: white; font-weight: bold " class="@hideIncidentReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/Incident-Summary.png" />
                <p class="chartshowhide" data-target="@chart5Name">HIDE</p>
            </li>
            <li style="background-color: rgb(0, 128, 128); color: white; font-weight: bold " class="@hideProjectReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/Project Status.png" />
                <p class="chartshowhide" data-target="@chart6Name">HIDE</p>
            </li>
            <li style="background-color: #005983; color: white; font-weight: bold " class="@hideAuditReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/Audit-report.png" />
                <p class="chartshowhide" data-target="@chart7Name">HIDE</p>
            </li>

        </ul>
    </div>

    <script>
        var hideIndentsScripts = "@hideIncidentReport";
        if (hideIndentsScripts != "hide") {

            var chart = new CanvasJS.Chart("@chart1Name", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Monthly Report",
                    fontColor: "white",
                    fontSize: 15,
                    padding: 10,
                    margin: 15,
                    backgroundColor: "#0095a8",
                    cornerRadius: 10,
                    fontWeight: "bold"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "center",  // top, center, bottom
                    margin: 30,
                },
                axisX: {
                    labelTextAlign: "left",
                    tickLength: 6,
                    tickThickness: 6,
                    tickColor: "red",
                },
                axisY: {
                    title: "Incidents count",
                    titleMaxWidth: 400,
                    titleFontWeight: "bold",
                    gridThickness: 0,
                    labelTextAlign: "left",
                    stripLines: [
                        {
                            value: 0,
                            showOnTop: true,
                            color: "gray",
                            thickness: 0
                        }
                    ]
                },

                data: [
                    {
                        type: "column",
                        showInLegend: true,
                        name: "Newly Raised",
                        legendText: "Newly Raised",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(33, 103, 174)",
                        legendMarkerColor: "rgb(33, 103, 174)",
                        color: "rgb(33, 103, 174)",
                        dataPoints: @Html.Raw(chartModel.MNRTDataPoints),
                    },
                    {
                        type: "column",
                        legendText: "Open",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(247, 150, 71)",
                        name: "Open",
                        showInLegend: true,
                        legendMarkerColor: "rgb(247, 150, 71)",
                        color: "rgb(247, 150, 71)",
                        dataPoints: @Html.Raw(chartModel.MOTDataPoints),
                    },
                    {
                        type: "column",
                        legendText: "Closed",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(81, 205, 160)",
                        name: "Closed",
                        showInLegend: true,
                        legendMarkerColor: "rgb(81, 205, 160)",
                        color: "rgb(81, 205, 160)",
                        dataPoints: @Html.Raw(chartModel.MCTTotalDataPoints),
                    }
                ]
            });
            chart.render();

            var chart = new CanvasJS.Chart("@chart2Name", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Monthly Raised Vs Closed",
                    fontColor: "white",
                    fontSize: 15,
                    padding: 10,
                    margin: 15,
                    backgroundColor: "#3b5998",
                    cornerRadius: 10,
                    fontWeight: "bold"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "center",  // top, center, bottom
                    margin: 15,
                },
                axisX: {
                    labelTextAlign: "left",
                    tickLength: 6,
                    tickThickness: 6,
                    tickColor: "red"
                },
                axisY: {
                    /*  title: "Incidents count",*/
                    titleMaxWidth: 400,
                    titleFontWeight: "bold",
                    gridThickness: 0,
                    labelTextAlign: "left",
                    stripLines: [
                        {
                            value: 0,
                            showOnTop: true,
                            color: "gray",
                            thickness: 0
                        }
                    ]
                },

                data: [
                    {
                        type: "area",
                        indexLabelFontSize: 28,
                        name: "Newly Raised",
                        legendText: "Newly Raised",
                        /*   indexLabelPlacement: "inside",*/
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(33, 103, 174)",
                        indexLabelTextAlign: "left",
                        legendMarkerColor: "rgb(33, 103, 174)",
                        color: "rgb(33, 103, 174)",
                        showInLegend: true,
                        dataPoints: @Html.Raw(chartModel.MNRTDataPoints),
                    },
                    {
                        type: "line",
                        legendText: "Closed",
                        indexLabelOrientation: "horizontal",
                        indexLabel: "{y}",
                        indexLabelFontSize: 9,
                        indexLabelFontWeight: "bolder",
                        indexLabelFontColor: "black",
                        name: "Closed",
                        showInLegend: true,
                        legendMarkerColor: "rgb(81, 205, 160)",
                        color: "rgb(81, 205, 160)",
                        dataPoints: @Html.Raw(chartModel.MSpecifCTDataPoints),
                    }
                ]
            });
            chart.render();

            var chart = new CanvasJS.Chart("@chart3Name", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Open Tickets",
                    fontColor: "white",
                    fontSize: 15,
                    padding: 10,
                    margin: 15,
                    backgroundColor: "#005983",
                    cornerRadius: 10,
                    fontWeight: "bold"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "center",  // top, center, bottom
                    margin: 15,
                },
                axisX: {
                    labelTextAlign: "left",
                    tickLength: 6,
                    tickThickness: 6,
                    tickColor: "red"
                },
                axisY: {
                    title: "Incidents count",
                    titleMaxWidth: 400,
                    titleFontWeight: "bold",
                    gridThickness: 0,
                    labelTextAlign: "left",
                    stripLines: [
                        {
                            value: 0,
                            showOnTop: true,
                            color: "gray",
                            thickness: 0
                        }
                    ]
                },

                data: [
                    {
                        type: "column",
                        showInLegend: true,
                        name: "Critical",
                        legendText: "Critical",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(192, 80, 78)",
                        legendMarkerColor: "rgb(192, 80, 78)",
                        color: "rgb(192, 80, 78)",
                        dataPoints:@Html.Raw(chartModel.MCRITOTDataPoints),

                    },
                    {
                        type: "column",
                        legendText: "High",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        name: "High",
                        showInLegend: true,
                        legendMarkerColor: "rgb(155, 187, 88)",
                        color: "rgb(155, 187, 88)",
                        indexLabelFontColor: "rgb(155, 187, 88)",
                        dataPoints:@Html.Raw(chartModel.MHIGOTDataPoints),
                    },
                    {
                        type: "column",
                        legendText: "Medium",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        name: "Medium",
                        showInLegend: true,
                        legendMarkerColor: "#005983",
                        color: "#005983",
                        indexLabelFontColor: "#005983",
                        dataPoints:@Html.Raw(chartModel.MMEDIOTDataPoints),
                    },
                    {
                        type: "column",
                        legendText: "Low",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        showInLegend: true,
                        legendMarkerColor: "rgb(74, 172, 197)",
                        color: "rgb(74, 172, 197)",
                        indexLabelFontColor: "rgb(74, 172, 197)",
                        dataPoints:@Html.Raw(chartModel.MLOWOTDataPoints),
                    }
                ]
            });
            chart.render();


            var chart = new CanvasJS.Chart("@chart4Name", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Incident Closure Trend",
                    fontColor: "white",
                    fontSize: 15,
                    padding: 10,
                    marginRight: 50,
                    backgroundColor: "rgb(0, 128, 128)",
                    cornerRadius: 10,
                    fontWeight: "bold"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "center",  // top, center, bottom
                },

                data: [
                    {
                        type: "pie",
                        startAngle: 240,
                        indexLabelFontSize: 12,
                        showInLegend: true,
                        yValueFormatString: "##0.00\"%\"",
                        indexLabel: "{label} {y}",
                        dataPoints: @Html.Raw(chartModel.ClosedTrend),
                    }
                ]
            });
            chart.render();

            var chart = new CanvasJS.Chart("@chart5Name", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Incidents Summary",
                    fontColor: "white",
                    fontSize: 15,
                    padding: 10,
                    marginLeft: 50,
                    backgroundColor: "rgb(74, 172, 197)",
                    cornerRadius: 10,
                    fontWeight: "bold"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "center",  // top, center, bottom
                },

                data: [
                    {
                        type: "doughnut",
                        startAngle: 240,
                        reversed: true,
                        indexLabelFontSize: 12,
                        showInLegend: true,
                        yValueFormatString: "##0.00\"%\"",
                        indexLabel: "{label}",
                        dataPoints: @Html.Raw(chartModel.IncidentsSummary),
                    }
                ]
            });
            chart.render();
        }

        var hideProjectsScripts = "@hideProjectReport";
        if (hideProjectsScripts != "hide") {

            var chart = new CanvasJS.Chart("@chart6Name",
                {
                    animationEnabled: true,
                    theme: "light2",
                    exportEnabled: true,
                    willReadFrequently: true,
                    axisY: {
                        /*    title: "percentage",*/
                        titleFontColor: "#005983",
                        titleFontSize: 15,
                        interlacedColor: "rgb(255,250,250)",
                        gridColor: "#FFBFD5",
                        gridThickness: 0,
                        labelTextAlign: "left",
                        stripLines: [
                            {
                                value: 0,
                                showOnTop: true,
                                color: "gray",
                                thickness: 0
                            }
                        ]
                    },
                    axisX: {
                        labelFontColor: "#005983",
                        labelFontSize: 10
                    },

                    title: {
                        text: "Project Status Report",
                        fontColor: "white",
                        fontSize: 15,
                        padding: 10,
                        marginBottom: 50,
                        backgroundColor: "rgb(0, 128, 128)",
                        cornerRadius: 10,
                        fontWeight: "bold"
                    },
                    legend: {
                        horizontalAlign: "right", // left, center ,right
                        verticalAlign: "center",  // top, center, bottom
                    },
                    data: [
                        {
                            indexLabel: "{y}%",
                            indexLabelFontColor: "white",
                            indexLabelPlacement: "inside",
                            type: "stackedBar100",
                            color: "rgb(0, 128, 128)",
                            name: "Completed %",
                            showInLegend: true,
                            dataPoints: @Html.Raw(chartModel.ProjectComppletionDataPoints),
                        },
                        {
                            indexLabel: "{y}%",
                            indexLabelFontColor: "white",
                            indexLabelPlacement: "inside",
                            type: "stackedBar100",
                            name: "Remaining %",
                            color: "#a4c4c0",
                            showInLegend: true,
                            dataPoints: @Html.Raw(chartModel.ProjectRemainingDataPoints),
                        }
                    ]
                });

            chart.render();
        }

        var hideAuditScripts = "@hideAuditReport";
        if (hideAuditScripts != "hide") {

            var chart = new CanvasJS.Chart("@chart7Name", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Audit Report",
                    fontColor: "rgb(81, 205, 160)",
                    fontSize: 15,
                    padding: 10,
                    margin: 15,
                    backgroundColor: "#005983",
                    cornerRadius: 10,
                    fontWeight: "bold"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "center",  // top, center, bottom
                    margin: 30,
                },
                axisX: {
                    labelTextAlign: "left",
                    tickLength: 6,
                    tickThickness: 6,
                    tickColor: "red",
                },
                axisY: {
                    title: "Test count",
                    titleMaxWidth: 400,
                    titleFontWeight: "bold",
                    gridThickness: 0,
                    labelTextAlign: "left",
                    stripLines: [
                        {
                            value: 0,
                            showOnTop: true,
                            color: "gray",
                            thickness: 0
                        }
                    ]
                },

                data: [
                    {
                        type: "column",
                        legendText: "Closed",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(81, 205, 160)",
                        name: "Closed",
                        showInLegend: true,
                        legendMarkerColor: "rgb(81, 205, 160)",
                        color: "rgb(81, 205, 160)",
                        dataPoints: @Html.Raw(chartModel.MSpecifcAudDataoints),
                    },
                    {
                        type: "column",
                        legendText: "Efficient",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        name: "Efficient",
                        showInLegend: true,
                        legendMarkerColor: "#005983",
                        color: "#005983",
                        indexLabelFontColor: "#005983",
                        dataPoints: @Html.Raw(chartModel.MSpecifcEffeAudDataoints),
                    },
                    {
                        type: "column",
                        legendText: "In Efficient",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        name: "In Efficient",
                        showInLegend: true,

                        legendMarkerColor: "rgb(74, 172, 197)",
                        color: "rgb(74, 172, 197)",
                        indexLabelFontColor: "rgb(74, 172, 197)",
                        dataPoints: @Html.Raw(chartModel.MSpecifcInEffeAudDataoints),
                    }
                ]
            });
            chart.render();
        }

    jQuery('.canvasjs-chart-credit').hide();

    //Hidden download graph options by default
    jQuery('.canvasjs-chart-toolbar').hide();
    jQuery('.page-name-title').text(jQuery('.page-name-title-updated').text());

    jQuery(document).ready(function () {
        jQuery(document).on("click", ".chartshowhide", function () {
            var className = jQuery(this).attr('data-target');
            if (jQuery('.'+className).css('display') == 'none') {
                jQuery('.' + className).show();
                $(this).text("HIDE");
            }
            else {
                jQuery('.' + className).hide();
                jQuery(this).text("SHOW");
            }
        });
    });

                    $('.carousel').carousel({
                        interval: 2000
                    });

    </script>

}









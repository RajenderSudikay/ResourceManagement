<style>
    .report-content-resource {
        padding-left: 15px;
        padding-top: 20px;
        font-size: small;
    }

    .table-striped-custom tr:nth-of-type(odd) {
        background-color: rgba(72, 113, 248, 0.068);
    }

    .vl {
        border-left: 1px solid rgb(33, 103, 174);
        height: 250px;
        margin-left: 30px;
    }
</style>

<div class="" style="background-color: white; color: #2167ae;">
    <br />
    <img src="~/Assets/AMBC_Logo.png" alt="Header Logo" style="margin-left: 20px" />
    <img src="https://www.littelfuse.com/~/media/images/littelfuse/site-logo/lf_logo.png" style="float: right; margin-right: 20px" />
    <br />

    <div class="container">
        <div class="row">

            <div class="col-md">
                <div style="padding-top: 50px; margin-left: 100px;">
                    <img src="~/Assets/MaleDefault.png" alt="Avatar" style="border-radius: 50%; width: 150px; margin-left: 15px">

                    <h2 style="padding-left:10px"><b>Rajender Sudikay</b></h2>
                    <div class="report-content-resource">
                        @*<p><b>Project Name:</b> JDE Security</p>*@
                        <p><b>Project Started:</b> Aug-2020</p>
                        <p><b>Reporting Manager:</b> Amy McGreal</p>
                    </div>

                </div>
            </div>
            <div class="col-md" style="color: rgb(0, 128, 128);background-color: white; border-radius: 30px; width: 18rem; margin-right: 50px; margin-top: 50px; border: 1px solid rgb(0, 128, 128) ">
                <div style="padding-top: 30px;">
                    <div>
                        <h2 style="font-size:xx-large;">
                            JDE Security
                        </h2>
                        <h5>
                            Project Status Report as of Nov 30th, 2022
                        </h5>
                    </div>
                </div>
                <hr style="background-color: red; height: 2px" />

                <div class="mt-xl-4">
                    <h2><b>Activity Details</b></h2>
                    <ul class="mt-xl-4">
                        <li class="">Working on JDE Security approval process with User Managers, Controller, IT Manager and Security officer.</li>
                        <li class="">
                            Create User profile, Password Reset and Assigning/revoking role access for Users in JDE for different departments.
                        </li>
                        <li class="">Assign securities to JDE roles as per business requirement.</li>
                        <li class="">Reviewing Consultant JDE roles expiration and follow-up with managers for role extensions.</li>
                        <li class="">Review Batch report failures in JDE and monitor the jobs for next run.</li>
                        <li class="">
                            Work on JDE Audit tasks such as extract/upload requested data , run security reports and email to managers for approvals.
                        </li>
                        <li>
                            Work on JDE termination Tasks in VFire, verify the users in JDE and take necessary actions.
                        </li>
                        <li class="">
                            Work on JDE Audit tasks such as extract/upload requested data , run security reports and email to managers for approvals.
                        </li>
                        <li>
                            Work on JDE termination Tasks in VFire, verify the users in JDE and take necessary actions.
                        </li>
                    </ul>
                </div>
            </div>


        </div>
    </div>

</div>

<br />
<div style="background-color: none; padding-top: 30px" />
<hr style="color: red; background-color: rgb(33, 103, 174)" />

<div id="chartContainer1" style="height: 250px; width: 48%; display: inline-block;"></div>
<div id="chartContainer2" style="height: 250px; width: 48%; display: inline-block;" class="vl"></div>

<div style="background-color: white; padding-top: 30px;" />
<hr style="color: red; background-color: rgb(33, 103, 174)" />

<div id="chartContainer3" style="width: 48%; height: 250px; display: inline-block;"></div>
<div id="chartContainer4" class="vl" style="width: 49%; height: 250px; display: inline-block; padding-left:0px"></div>


<div style="background-color: white; padding-top: 30px" />
<hr style="color: red; background-color: rgb(33, 103, 174)" />

<div id="chartContainer5" style="width: 48%; height: 250px; display: inline-block;"></div>
<div id="chartContainer6" class="vl" style="width: 49%; height: 250px; display: inline-block; padding-left:0px"></div>

<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<script src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>

<script>
           var chart = new CanvasJS.Chart("chartContainer1", {
                animationEnabled: true,
               theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Monthly Report",
                    fontColor: "rgb(33, 103, 174)",
                },
                axisX: {
                    labelTextAlign: "left"
                },
                axisY: {
                   title: "Incidents count",
                    titleMaxWidth: 400,
                    titleFontWeight: "bold",
                    gridThickness: 0,
                    labelTextAlign: "left",
                    stripLines: [
                        {
                            value: 0,
                            showOnTop: true,
                            color: "gray",
                            thickness: 0
                        }
                    ]
                },

                data: [
                    {
                        type: "column",
                        showInLegend: true,
                        name: "Newly Raised",
                        legendText: "Newly Raised",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(33, 103, 174)",
                        legendMarkerColor: "rgb(33, 103, 174)",
                        color: "rgb(33, 103, 174)",
                        dataPoints: @Html.Raw(ViewBag.MNRTDataPoints),
                    },
                    {
                        type: "column",
                        legendText: "Open",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(247, 150, 71)",
                        name: "Open",
                        showInLegend: true,
                        legendMarkerColor: "rgb(247, 150, 71)",
                        color: "rgb(247, 150, 71)",
                        dataPoints: @Html.Raw(ViewBag.MOTDataPoints),
                    },
                     {
                        type: "column",
                         legendText: "Closed",
                         indexLabel: "{y}",
                         indexLabelFontWeight: "bold",
                         indexLabelFontColor: "rgb(81, 205, 160)",
                         name: "Closed",
                        showInLegend: true,
                         legendMarkerColor: "rgb(81, 205, 160)",
                         color: "rgb(81, 205, 160)",
                        dataPoints: @Html.Raw(ViewBag.MCTTotalDataPoints),
                    }
               ]
            });
        chart.render();

        var chart = new CanvasJS.Chart("chartContainer2", {
	        animationEnabled: true,
            theme: "dark2",
            exportEnabled: true,
            willReadFrequently: true,
	        title: {
                text: "Monthly Raised Vs Closed",
              /*  fontColor: "rgb(33, 103, 174)",*/
            },
            axisX: {
                labelTextAlign: "left"
            },
            axisY: {
               title: "Incidents count",
                titleMaxWidth: 400,
                titleFontWeight: "bold",
                gridThickness: 0,
                labelTextAlign: "left",
                stripLines: [
                    {
                        value: 0,
                        showOnTop: true,
                        color: "gray",
                        thickness: 0
                    }
                ]
            },

            data: [
              {
                    type: "line",
                    showInLegend: true,
                    name: "Newly Raised",
                    legendText: "Newly Raised",
                    indexLabel: "{y}",
                    indexLabelFontWeight: "bold",
                    indexLabelFontColor: "rgb(33, 103, 174)",
                    legendMarkerColor: "rgb(33, 103, 174)",
                    color: "rgb(33, 103, 174)",
                    dataPoints: @Html.Raw(ViewBag.MNRTDataPoints),
                },
                 {
                     type: "line",
                     legendText: "Closed",
                     indexLabel: "{y}",
                     indexLabelFontWeight: "bold",
                     indexLabelFontColor: "rgb(81, 205, 160)",
                     name: "Closed",
                    showInLegend: true,
                     legendMarkerColor: "rgb(81, 205, 160)",
                     color: "rgb(81, 205, 160)",
                    dataPoints: @Html.Raw(ViewBag.MSpecifCTDataPoints),
                }
            ]
        });
    chart.render();

     var chart = new CanvasJS.Chart("chartContainer3", {
	        animationEnabled: true,
            theme: "light2",
            exportEnabled: true,
            willReadFrequently: true,
	        title: {
                text: "Open Tickets",
                fontColor: "rgb(33, 103, 174)",
            },
            axisX: {
                labelTextAlign: "left"
            },
            axisY: {
               title: "Incidents count",
                titleMaxWidth: 400,
                titleFontWeight: "bold",
                gridThickness: 0,
                labelTextAlign: "left",
                stripLines: [
                    {
                        value: 0,
                        showOnTop: true,
                        color: "gray",
                        thickness: 0
                    }
                ]
            },

            data: [
              {
                    type: "column",
                    showInLegend: true,
                    name: "Critical",
                    legendText: "Critical",
                    indexLabel: "{y}",
                    indexLabelFontWeight: "bold",
                    indexLabelFontColor: "rgb(33, 103, 174)",
                    legendMarkerColor: "rgb(33, 103, 174)",
                    color: "rgb(33, 103, 174)",
                    dataPoints: @Html.Raw(ViewBag.CriticlTickets),
                },
                 {
                     type: "column",
                     legendText: "High",
                     indexLabel: "{y}",
                     indexLabelFontWeight: "bold",
                     name: "High",
                    showInLegend: true,
                     legendMarkerColor: "rgb(255,215,0)",
                     color: "rgb(255,215,0)",
                     indexLabelFontColor: "rgb(255,215,0)",
                    dataPoints:  @Html.Raw(ViewBag.HighTickets),
                },
                  {
                     type: "column",
                     legendText: "Medium",
                     indexLabel: "{y}",
                     indexLabelFontWeight: "bold",
                      name: "Medium",
                    showInLegend: true,
                      legendMarkerColor: "rgb(247, 150, 71)",
                      color: "rgb(247, 150, 71)",
                      indexLabelFontColor: "rgb(247, 150, 71)",
                    dataPoints: @Html.Raw(ViewBag.LowTickets),
                },
                   {
                     type: "column",
                     legendText: "Low",
                     indexLabel: "{y}",
                     indexLabelFontWeight: "bold",
                    showInLegend: true,
                       legendMarkerColor: "rgb(47, 79, 79)",
                       color: "rgb(47, 79, 79)",
                       indexLabelFontColor: "rgb(47, 79, 79)",
                    dataPoints: @Html.Raw(ViewBag.CriticlTickets),
                }
            ]
        });
    chart.render();


     var chart = new CanvasJS.Chart("chartContainer4", {
	        animationEnabled: true,
	        theme: "light2",
            exportEnabled: true,
            willReadFrequently: true,
	        title: {
                text: "Incident Closure Trend",
               fontColor: "rgb(33, 103, 174)",
            },
            data: [
              {
                    type: "pie",
                    startAngle: 240,
                    indexLabelFontSize: 12,
                    showInLegend: true,
                    yValueFormatString: "##0.00\"%\"",
                    indexLabel: "{label} {y}",
                    dataPoints: @Html.Raw(ViewBag.ClosedTrend),
                }
            ]
        });
    chart.render();

         var chart = new CanvasJS.Chart("chartContainer5", {
	        animationEnabled: true,
	        theme: "funnel",
            exportEnabled: true,
            willReadFrequently: true,
	        title: {
                text: "Incidents Summary",
                fontColor: "rgb(33, 103, 174)",
            },
            data: [
              {
                    type: "funnel",
                    startAngle: 240,
                    indexLabelFontSize: 12,
                    showInLegend: true,
                    yValueFormatString: "##0.00\"%\"",
                    indexLabel: "{label} {y}",
                    dataPoints: @Html.Raw(ViewBag.IncidentsSummary),
                }
            ]
        });
    chart.render();


    jQuery('.canvasjs-chart-credit').hide();

</script>




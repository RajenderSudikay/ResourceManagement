@model ResourceManagement.Models.GraphChartModel

<style>
    .chart-textarea {
        font-size: inherit;
        font-family: cursive;
        border: 1px solid #0095a8;
        border-radius: 10px;
        width: 280px;
        color: #18A558 !important;
    }

    input:focus, textarea:focus {
        outline: none;
    }

    .project-chart-textarea {
        min-width: 150px;
        max-width: 500px;
        width: 100%;
        margin-left: 300px;
        margin-top: 15px;
        height: 66px;
        font-size: inherit;
        font-family: cursive;
        border: 1px solid #0095a8;
        border-radius: 10px;
        /* width: 280px; */
        color: #18A558 !important;
        margin-bottom: 50px;
    }

    .custom-card {
        width: 80% !important;
        color: white !important;
    }

    .custom-col-sm-6 {
        margin-top: 15px;
    }

    .empPersonelInfoe-banner {
        margin-top: -20px;
        margin-left: 100px;
    }
</style>

@if (Model == null && Model.ViewModel == null && Model.ViewModel.Count == 0)
{
    return;
}
@{
    int i = 1;
}

@foreach (var chartModel in Model.ViewModel)
{
    var chart1Name = "chart1Container" + i;
    var chart2Name = "chart2Container" + i;
    var chart3Name = "chart3Container" + i;
    var chart4Name = "chart4Container" + i;
    var chart5Name = "chart5Container" + i;
    var chart6Name = "chart6Container" + i;
    var chart7Name = "chart7Container" + i;
    var chart8Name = "chart8Container" + i;
    var chart9Name = "chart9Container" + i;
    var chart10Name = "chart10Container" + i;
    i++;

    <div class="" style="background-color: white; color: #2167ae;">
        <br />
        <img src="~/Assets/AMBC_Logo.png" alt="Header Logo" style="margin-left: 20px !important;  height: 70px !important; margin-top: -10px !important;width: 200px !important" />
        @{
            var clientLogo = "";
            if (chartModel.AMBC_Active_Emp_view.Client != "AMBC")
            {
                clientLogo = "/Assets/ClientLogos/" + chartModel.AMBC_Active_Emp_view.Client + ".png";
            }
        }
        @if (clientLogo != "")
        {
            <img src='@clientLogo' style="float: right !important; margin-right: 20px !important; height: 70px !important; margin-top: -10px !important; width: 200px !important" />
        }

        <br />

        <div class="report-banner">
            <div class="banner-wrapper">
                <div class="banner-media">
                    <div class="banner-image__circle">
                        <figure>
                            <img src="@chartModel.EmployeeImage" class="banner-img" width="170" height="170" />
                        </figure>
                        <p class="banner-empname">@chartModel.AMBC_Active_Emp_view.Employee_Name</p>

                        <div class="emp-banner-info-div">
                            <p>
                                <div class="employeeInfo-banner">  <img src="~/Assets/Icons/email-new.png" width="15" style="margin-top: -11px; margin-left: 75px; " /><div class="empPersonelInfoe-banner"><b style="color: #23366f !important ">@chartModel.AMBC_Active_Emp_view.AMBC_Mail_Address</b> </div></div>
                            </p>
                            <p>
                                <div class="employeeInfo-banner">
                                    <img src="~/Assets/Icons/phone-call.png" width="15" style="margin-top: -11px; margin-left: 75px; " /><div class="empPersonelInfoe-banner"><b style="color: #23366f !important ">@chartModel.AMBC_Active_Emp_view.Contact_Number</b></div>
                                </div>
                            </p>
                            <p>
                                <div class="employeeInfo-banner">
                                    <img src="~/Assets/Icons/project-management.png" width="15" style="margin-top: -11px; margin-left: 75px; " /><div class="empPersonelInfoe-banner">
                                        <b style="color: #23366f !important ">@chartModel.AMBC_Active_Emp_view.Client_Report_Manager</b>
                                    </div>
                                </div>
                            </p>
                            <br />
                            <p style="height: 20px"></p>
                        </div>


                    </div>
                    <div class="banner-decoration">
                        @*<div class="banner-decoration__elements">*@
                        <span class="banner-decoration__circle"></span>
                        <span class="banner-decoration__half-mask">
                            <span class="banner-decoration__half-mask__circle bg-height">
                            </span>
                        </span>
                        <span class="banner-decoration__mini-circle bg-height"></span>
                        @*</div>*@
                    </div>
                </div>
                <div class="banner-content">
                    <div style="padding-top: 10px;">
                        <div>
                            <h2 style="font-size: xx-large; color: white !important ">
                                @chartModel.AMBC_Active_Emp_view.Client_Project_Name
                            </h2>
                            <h5 style="color: white !important ">
                                Project Status Report as of: <b style="font-size: initial; color: floralwhite !important; margin-left: 5px !important">  @Model.SelectedReportMonth.MonthName @Model.SelectedReportMonth.MonthEndDate@Model.SelectedReportMonth.Suffix, @Model.SelectedReportMonth.year</b>
                            </h5>

                            <h5 style="color: white !important; margin-left: 72px !important">
                                Report Period: <b style="font-size: initial; color: floralwhite !important; margin-left: 5px !important">  @Model.SelectedReportMonth.ReportStartMonth to @Model.SelectedReportMonth.MonthName-@Model.SelectedReportMonth.year</b>
                            </h5>

                            <div style="display: none" class="page-name-title-updated">Status Report - @chartModel.AMBC_Active_Emp_view.Employee_Name @Model.SelectedReportMonth.MonthName @Model.SelectedReportMonth.MonthEndDate@Model.SelectedReportMonth.Suffix, @Model.SelectedReportMonth.year</div>

                        </div>

                    </div>

                    <hr class="employeeinfohr" style="background-color: rgb(81, 205, 160) !important; height: 2px !important; width: 90% !important; margin-left: 0px !important; margin-top: 15px !important; " />

                    <div class="report-content-resource">
                        <br />
                        <div class="employeeInfo">  <img src="~/Assets/Icons/email-new.png" width="20" /><div class="empPersonelInfoe"><b style="color: white !important ">@chartModel.AMBC_Active_Emp_view.AMBC_Mail_Address</b> </div></div>
                        <div class="employeeInfo">
                            <img src="~/Assets/Icons/phone-call.png" width="18" /><div class="empPersonelInfoe"><b style="color: white !important ">@chartModel.AMBC_Active_Emp_view.Contact_Number</b></div>
                        </div>

                        <div class="employeeInfo">
                            <img src="~/Assets/Icons/project-management.png" width="17" /><div class="empPersonelInfoe">
                                <b style="color: white !important ">@chartModel.AMBC_Active_Emp_view.Client_Report_Manager</b>
                            </div>
                        </div>

                        <div class="employeeInfo" style="color: white !important;">
                            <div id="circle">
                                <p style="text-align: center !important; position: absolute !important; margin-left: 25px !important; margin-top: 20px !important; font-size: x-large !important; color: #23366f !important; "><b style="color: #23366f !important ">@chartModel.EmaployeeAvailabity%</b><div style="margin-top: 60px !important; position: absolute !important; margin-left: 15px !important; color: #23366f !important "><b style="color: #23366f !important ">Attendence</b></div></p>
                            </div>
                        </div>

                    </div>
                    @*style="margin-left: -50px; margin-top: -104px;"*@
                    <div class="@chart10Name chartdiv " style="margin-left: -50px; margin-top: -104px;">
                        <div id="@chart10Name" class="chartimagediv-banner" style="width: 65%;height: 130px; display: inline-block; "></div>
                        @*<div>
                                <textarea rows="3" class="project-chart-textarea"></textarea>
                            </div>*@

                    </div>
                </div>
            </div>
        </div>

        <div class="report-activity">
            <h2><b style="color: rgb(0, 128, 128) !important">Activity Details</b></h2>
            <ul class="mt-xl-4">
                @{
                    var activitesDetails = chartModel.AMBC_Active_Emp_view.Roles_Responsibilities;
                }

                @if (!string.IsNullOrWhiteSpace(activitesDetails))
                {
                    foreach (var activity in activitesDetails.Split('|'))
                    {
                        <li class="" style="color: rgb(0, 128, 128) !important ">@activity</li>
                    }
                }

            </ul>
        </div>
    </div>

    <br />

    <div style="background-color: none; padding-top: 30px !important" />

    var hideIncidentReport = "";
    if (Model.IsIncidentReportExists == false)
    {
        hideIncidentReport = "hide";
    }

    <div class="@chart1Name chartdiv @hideIncidentReport">
        <div id="@chart1Name" class="chartimagediv" style="height: 235px; width: 60%; display: inline-block; margin-left: 150px;"></div><p class="chartparah" style="position: absolute; margin-left: 735px; margin-top: -55px; color: #0095a8 !important; font-size: medium; font-family: cursive; font-size: larger ">@*Overall Ticket Run rate ~@Html.Raw(chartModel.Graph1OverallStatus)*@   <textarea rows="3" class="chart-textarea"></textarea></p>
        <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>
    </div>

    @*<div class="@chart2Name chartdiv @hideIncidentReport">
            <div id="@chart2Name" class="chartimagediv" style="height: 230px; width: 60%; display: inline-block; margin-left: 150px;"></div><p class="chartparah" style="position: absolute; margin-left: 735px; margin-top: -65px; color: #3b5998 !important; font-size: medium; font-family: cursive; font-size: larger ">
                @Html.Raw(chartModel.Graph2OverallStatus)
            </p>
            <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>
        </div>*@
    <div class="@chart3Name chartdiv @hideIncidentReport">
        <div id="@chart3Name" class="chartimagediv" style="width: 60%; height: 235px; display: inline-block; margin-left: 150px; "></div><p class="chartparah3" style="position: absolute; margin-left: 762px; margin-top: -51px; color: #005983 !important; font-size: medium; font-family: cursive; font-size: larger ">@*@Html.Raw(chartModel.Graph3OverallStatus)*@ <textarea rows="3" class="chart-textarea"></textarea></p>
        <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>
    </div>

    <div class="container @hideIncidentReport">
        <div class="row">
            <div class="col @chart4Name chartdiv multplechartdiv">

                <div id="@chart4Name" class="chartimagedivmultiple" style="height: 230px; width: 400px; display: inline-block; padding-left: 0px;"></div><p class="multiplechartparah" style="position: absolute; margin-left: 85px; margin-top: 5px; color: rgb(0, 128, 128) !important; font-size: medium; font-family: cursive; font-size: larger; width: 330px;">@*@Html.Raw(chartModel.Graph4OverallStatus)*@  <textarea rows="3" class="chart-textarea"></textarea></p>
                <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2> </div>

            </div>
            <div class="col @chart5Name chartdiv">

                <div id="@chart5Name" class="chartimagedivmultiple" style="height: 230px; width: 400px; display: inline-block;"></div><p class="multiplechartparah" style="position: absolute; margin-left: 85px; margin-top: 5px; color: rgb(74, 172, 197) !important; font-size: medium; font-family: cursive; font-size: larger; width: 330px; ">@*@Html.Raw(chartModel.Graph5OverallStatus)*@         <textarea rows="3" class="chart-textarea"></textarea></p>
                <div style="background-color: white; padding-top: 30px; text-align: center; margin-bottom: 30px; margin-left: 150px; margin-right: 150px "><h2 class="chartbelowhrline" style="margin-left: -70px"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>

                <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2> </div>
            </div>
        </div>
    </div>

    var hideProjectReport = "";
    if (Model.IsProjectReportExists == false)
    {
        hideProjectReport = "hide";
    }

    <div class="@chart6Name chartdiv @hideProjectReport">
        <div id="@chart6Name" class="chartimagediv" style="width: 75%; height: @chartModel.ProjectReportHeight; display: inline-block; margin-left: 80px; "></div>

        <div>
            <textarea rows="3" class="project-chart-textarea"></textarea>
        </div>
    </div>

    @*<div class="@chart8Name chartdiv @hideProjectReport">
            <div id="@chart8Name" class="chartimagediv" style="width: 75%; height: @chartModel.ProjectReportHeight; display: inline-block; margin-left: 80px; "></div>
            <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>
        </div>*@


    <div class="@chart9Name chartdiv @hideProjectReport">
        <div id="@chart9Name" class="chartimagediv" style="width: 75%;height: @chartModel.ProjectReportbarChartHeight ; display: inline-block; margin-left: 80px; "></div>
        <div>
            <textarea rows="3" class="project-chart-textarea"></textarea>
        </div>

    </div>

    @*<div class="@chart10Name chartdiv ">
            <div id="@chart10Name" class="chartimagediv" style="width: 75%;height: 200px; display: inline-block; margin-left: 80px; "></div>
            <div>
                <textarea rows="3" class="project-chart-textarea"></textarea>
            </div>

        </div>*@


    var colors = new List<string>();
    colors.Add("#005983 !important");
    colors.Add("rgb(74, 172, 197) !important");
    colors.Add("rgb(81, 205, 160) !important");
    colors.Add("rgb(76, 156, 160) !important");
    colors.Add("rgb(0, 128, 128); !important");
    colors.Add("rgb(223, 121, 112) !important");

    colors.Add("#005983 !important");
    colors.Add("rgb(74, 172, 197) !important");
    colors.Add("rgb(81, 205, 160) !important");
    colors.Add("rgb(76, 156, 160) !important");
    colors.Add("rgb(0, 128, 128); !important");
    colors.Add("rgb(223, 121, 112) !important");

    colors.Add("#005983 !important");
    colors.Add("rgb(74, 172, 197) !important");
    colors.Add("rgb(81, 205, 160) !important");
    colors.Add("rgb(76, 156, 160) !important");
    colors.Add("rgb(0, 128, 128); !important");
    colors.Add("rgb(223, 121, 112) !important");

    colors.Add("#005983 !important");
    colors.Add("rgb(74, 172, 197) !important");
    colors.Add("rgb(81, 205, 160) !important");
    colors.Add("rgb(76, 156, 160) !important");
    colors.Add("rgb(0, 128, 128); !important");
    colors.Add("rgb(223, 121, 112) !important");


    if (@chartModel.FutureProjects != null && chartModel.FutureProjects.Count() > 0)
    {
        <h2 style="margin-left: 75px !important"><b style="color: rgb(0, 128, 128) !important">Upcoming Projects</b></h2>
        <hr style="border: 1px solid rgb(177, 3, 50) !important; width: 86% !important" />
        <br />

        <div class="row">

            @{
                var projectCount = 0;
            }

            @foreach (var futureProject in chartModel.FutureProjects)
            {
                var marignLeft = "75px !important";
                if (projectCount % 2 != 0)
                {
                    marignLeft = "0px !important";
                }
                var bgColor = colors[projectCount];

                var startDate = futureProject.ProjestStartDate != DateTime.MinValue ? futureProject.ProjestStartDate.ToString().Replace("00:00:00", "").Replace("12:00:00 AM", "") : "TBD";
                var endDate = futureProject.TargetClosingDate != DateTime.MinValue ? futureProject.TargetClosingDate.ToString().Replace("00:00:00", "").Replace("12:00:00 AM", "") : "TBD";

                <div class="col-sm-6 custom-col-sm-6">
                    <div class="card card-1 custom-card" style="background-color:@bgColor ; margin-left: @marignLeft ">
                        <div class="card-body" style="width: 80% !important; text-align: center !important">
                            <h2 class="card-title" style="color: white !important">@futureProject.label</h2>
                            <p class="card-text" style="color: white !important">@futureProject.Summary</p>
                            <b style="color: white !important">Start Date: </b><b style="color: white !important; font-size:larger !important">@startDate</b>
                            <br />
                            <b style="color: white !important">End Date: </b><b style="color:white !important; font-size: larger !important;">@endDate</b>
                        </div>
                    </div>
                </div>
                projectCount++;
            }
        </div>
    }
    var hideAuditReport = "";
    if (Model.IsAuditReportExists == false)
    {
        hideAuditReport = "hide";
    }

    <div class="@chart7Name chartdiv @hideAuditReport">
        <div id="@chart7Name" class="chartimagediv" style="width: 60%; height: 235px; display: inline-block; margin-left: 150px; "></div><p class="chartparah7" style="position: absolute; margin-left: 762px; margin-top: -51px; color: #005983 !important; font-size: medium; font-family: cursive; font-size: larger "><textarea rows="3" class="chart-textarea" style="margin-left: -15px !important"></textarea></p>
        <div class="hrlineDiv"><h2 class="chartbelowhrline" style="margin-left: -70px !important; margin-top: -15px !important;"><b style="color: rgb(0, 128, 128) !important"></b></h2></div>
    </div>



    <div style="text-align: center; color: white !important; background-color: #005983 !important; height: 75px; border-radius: 0px; padding-top: 10px; margin-top: 100px">
        <div style=" text-align:center"><b style="font-size: xx-large; color: white !important;">Thank you...!</b></div>
    </div>

    <div class="sticky-container">
        <ul class="sticky">
            <li style="background-color: rgb(177, 3, 50); color: white; font-weight: bold ">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/attendence-chart.png" />
                <p class="chartshowhide" data-target="@chart10Name">HIDE</p>
            </li>
            <li style="background-color: #0095a8; color: white; font-weight: bold " class="@hideIncidentReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/bar-graph.png" />
                <p class="chartshowhide" data-target="@chart1Name">HIDE</p>
            </li>
            @*<li style="background-color: #3b5998; color: white; font-weight: bold " class="@hideIncidentReport">
                    <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/ClosureTrend.png" />
                    <p class="chartshowhide" data-target="@chart2Name">HIDE</p>
                </li>*@
            <li style="background-color: #005983; color: white; font-weight: bold " class="@hideIncidentReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/Open-Tickets.png" />
                <p class="chartshowhide" data-target="@chart3Name">HIDE</p>
            </li>
            <li style="background-color: rgb(0, 128, 128); color: white; font-weight: bold " class="@hideIncidentReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/Closure-Trend.png" />
                <p class="chartshowhide" data-target="@chart4Name">HIDE</p>
            </li>
            <li style="background-color: rgb(74, 172, 197); color: white; font-weight: bold " class="@hideIncidentReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/Incident-Summary.png" />
                <p class="chartshowhide" data-target="@chart5Name">HIDE</p>
            </li>
            <li style="background-color: rgb(0, 128, 128); color: white; font-weight: bold " class="@hideProjectReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/Project Status.png" />
                <p class="chartshowhide" data-target="@chart6Name">HIDE</p>
            </li>
            <li style="background-color: #005983; color: white; font-weight: bold " class="@hideProjectReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/bar-chart.png" />
                <p class="chartshowhide" data-target="@chart9Name">HIDE</p>
            </li>
            <li style="background-color: #005983; color: white; font-weight: bold " class="@hideAuditReport">
                <img style="width:45px !important; height: 40px !important" title="" alt="" src="~/Assets/Graphs/Audit-report.png" />
                <p class="chartshowhide" data-target="@chart7Name">HIDE</p>
            </li>

        </ul>
    </div>

    <script>
        var hideIndentsScripts = "@hideIncidentReport";
        if (hideIndentsScripts != "hide") {

            var chart = new CanvasJS.Chart("@chart1Name", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Monthly Report",
                    fontColor: "white",
                    fontSize: 15,
                    padding: 10,
                    margin: 15,
                    backgroundColor: "#0095a8",
                    cornerRadius: 10,
                    fontWeight: "bold"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "center",  // top, center, bottom
                    margin: 30,
                },
                axisX: {
                    labelTextAlign: "left",
                    tickLength: 6,
                    tickThickness: 6,
                    tickColor: "red",
                },
                axisY: {
                    title: "Incidents count",
                    titleMaxWidth: 400,
                    titleFontWeight: "bold",
                    gridThickness: 0,
                    labelTextAlign: "left",
                    stripLines: [
                        {
                            value: 0,
                            showOnTop: true,
                            color: "gray",
                            thickness: 0
                        }
                    ]
                },

                data: [
                    {
                        type: "column",
                        showInLegend: true,
                        name: "Newly Raised",
                        legendText: "Newly Raised",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(33, 103, 174)",
                        legendMarkerColor: "rgb(33, 103, 174)",
                        color: "rgb(33, 103, 174)",
                        indexLabelFontSize: 10,
                          /*   indexLabelPlacement: "inside",*/
                        dataPoints: @Html.Raw(chartModel.MNRTDataPoints),
                    },
                    {
                        type: "column",
                        legendText: "Open",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(247, 150, 71)",
                        name: "Open",
                        showInLegend: true,
                        legendMarkerColor: "rgb(247, 150, 71)",
                        color: "rgb(247, 150, 71)",
                        indexLabelFontSize: 10,
                        dataPoints: @Html.Raw(chartModel.MOTDataPoints),
                    },
                    {
                        type: "column",
                        legendText: "Closed",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(81, 205, 160)",
                        name: "Closed",
                        showInLegend: true,
                        legendMarkerColor: "rgb(81, 205, 160)",
                        color: "rgb(81, 205, 160)",
                        indexLabelFontSize: 10,
                        dataPoints: @Html.Raw(chartModel.MCTTotalDataPoints),
                    }
                ]
            });
            chart.render();

            @*var chart = new CanvasJS.Chart("@chart2Name", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Monthly Raised Vs Closed",
                    fontColor: "white",
                    fontSize: 15,
                    padding: 10,
                    margin: 15,
                    backgroundColor: "#3b5998",
                    cornerRadius: 10,
                    fontWeight: "bold"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "center",  // top, center, bottom
                    margin: 15,
                },
                axisX: {
                    labelTextAlign: "left",
                    tickLength: 6,
                    tickThickness: 6,
                    tickColor: "red"
                },
                axisY: {
                    /*  title: "Incidents count",*/
                    titleMaxWidth: 400,
                    titleFontWeight: "bold",
                    gridThickness: 0,
                    labelTextAlign: "left",
                    stripLines: [
                        {
                            value: 0,
                            showOnTop: true,
                            color: "gray",
                            thickness: 0
                        }
                    ]
                },

                data: [
                    {
                        type: "area",
                        indexLabelFontSize: 28,
                        name: "Newly Raised",
                        legendText: "Newly Raised",
                        /*   indexLabelPlacement: "inside",*/
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(33, 103, 174)",
                        indexLabelTextAlign: "left",
                        legendMarkerColor: "rgb(33, 103, 174)",
                        color: "rgb(33, 103, 174)",
                        showInLegend: true,
                        dataPoints: @Html.Raw(chartModel.MNRTDataPoints),
                    },
                    {
                        type: "line",
                        legendText: "Closed",
                        indexLabelOrientation: "horizontal",
                        indexLabel: "{y}",
                        indexLabelFontSize: 9,
                        indexLabelFontWeight: "bolder",
                        indexLabelFontColor: "black",
                        name: "Closed",
                        showInLegend: true,
                        legendMarkerColor: "rgb(81, 205, 160)",
                        color: "rgb(81, 205, 160)",
                        dataPoints: @Html.Raw(chartModel.MSpecifCTDataPoints),
                    }
                ]
            });
            chart.render();*@

            var chart = new CanvasJS.Chart("@chart3Name", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Open Tickets",
                    fontColor: "white",
                    fontSize: 15,
                    padding: 10,
                    margin: 15,
                    backgroundColor: "#005983",
                    cornerRadius: 10,
                    fontWeight: "bold"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "center",  // top, center, bottom
                    margin: 15,
                },
                axisX: {
                    labelTextAlign: "left",
                    tickLength: 6,
                    tickThickness: 6,
                    tickColor: "red"
                },
                axisY: {
                    title: "Incidents count",
                    titleMaxWidth: 400,
                    titleFontWeight: "bold",
                    gridThickness: 0,
                    labelTextAlign: "left",
                    stripLines: [
                        {
                            value: 0,
                            showOnTop: true,
                            color: "gray",
                            thickness: 0
                        }
                    ]
                },

                data: [
                    {
                        type: "column",
                        showInLegend: true,
                        name: "Critical",
                        legendText: "Critical",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(192, 80, 78)",
                        legendMarkerColor: "rgb(192, 80, 78)",
                        color: "rgb(192, 80, 78)",
                        indexLabelFontSize: 10,
                        dataPoints:@Html.Raw(chartModel.MCRITOTDataPoints),

                    },
                    {
                        type: "column",
                        legendText: "High",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        name: "High",
                        showInLegend: true,
                        legendMarkerColor: "rgb(155, 187, 88)",
                        color: "rgb(155, 187, 88)",
                        indexLabelFontSize: 10,
                        indexLabelFontColor: "rgb(155, 187, 88)",
                        dataPoints:@Html.Raw(chartModel.MHIGOTDataPoints),
                    },
                    {
                        type: "column",
                        legendText: "Medium",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        name: "Medium",
                        showInLegend: true,
                        legendMarkerColor: "#005983",
                        color: "#005983",
                        indexLabelFontColor: "#005983",
                        indexLabelFontSize: 10,
                        dataPoints:@Html.Raw(chartModel.MMEDIOTDataPoints),
                    },
                    {
                        type: "column",
                        legendText: "Low",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        showInLegend: true,
                        legendMarkerColor: "rgb(74, 172, 197)",
                        color: "rgb(74, 172, 197)",
                        indexLabelFontColor: "rgb(74, 172, 197)",
                        indexLabelFontSize: 10,
                        dataPoints:@Html.Raw(chartModel.MLOWOTDataPoints),
                    }
                ]
            });
            chart.render();


            var chart = new CanvasJS.Chart("@chart4Name", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Incident Closure Trend",
                    fontColor: "white",
                    fontSize: 15,
                    padding: 10,
                    marginRight: 50,
                    backgroundColor: "rgb(0, 128, 128)",
                    cornerRadius: 10,
                    fontWeight: "bold"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "center",  // top, center, bottom
                },

                data: [
                    {
                        type: "pie",
                        startAngle: 240,
                        indexLabelFontSize: 12,
                        showInLegend: true,
                        yValueFormatString: "##0.00\"%\"",
                        indexLabel: "{label} {y}",
                        dataPoints: @Html.Raw(chartModel.ClosedTrend),
                    }
                ]
            });
            chart.render();

            var chart = new CanvasJS.Chart("@chart5Name", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Incidents Summary",
                    fontColor: "white",
                    fontSize: 15,
                    padding: 10,
                    marginLeft: 50,
                    backgroundColor: "rgb(74, 172, 197)",
                    cornerRadius: 10,
                    fontWeight: "bold"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "center",  // top, center, bottom
                },

                data: [
                    {
                        type: "doughnut",
                        startAngle: 240,
                        reversed: true,
                        indexLabelFontSize: 12,
                        showInLegend: true,
                        yValueFormatString: "##0.00\"%\"",
                        indexLabel: "{label}",
                        dataPoints: @Html.Raw(chartModel.IncidentsSummary),
                    }
                ]
            });
            chart.render();
        }

        var hideProjectsScripts = "@hideProjectReport";
        if (hideProjectsScripts != "hide") {

            var chart = new CanvasJS.Chart("@chart6Name",
                {
                    animationEnabled: true,
                    theme: "light2",
                    exportEnabled: true,
                    willReadFrequently: true,
               /*     backgroundColor: "#7EC8E3",*/
                    axisY: {
                        /*    title: "percentage",*/
                        titleFontColor: "#005983",
                        titleFontSize: 15,
                        interlacedColor: "rgb(255,250,250)",
                        gridColor: "#FFBFD5",
                        gridThickness: 0,
                        labelTextAlign: "left",
                        stripLines: [
                            {
                                value: 0,
                                showOnTop: true,
                                color: "gray",
                                thickness: 0
                            }
                        ]
                    },
                    axisX: {
                        labelFontColor: "#005983",
                        labelFontSize: 10,
                        tickLength: 3,
                        tickThickness: 3,
                        tickColor: "red",
                    },

                    axisY: {
                        tickLength: 3,
                        tickThickness: 3,
                        tickColor: "red",
                    },

                    title: {
                        text: "Project Status as of (@Model.SelectedReportMonth.MonthName-@Model.SelectedReportMonth.year)",
                        fontColor: "white",
                        fontSize: 15,
                        padding: 10,
                        marginBottom: 50,
                        backgroundColor: "rgb(0, 128, 128)",
                        cornerRadius: 10,
                        fontWeight: "bold"
                    },
                    legend: {
                        horizontalAlign: "right", // left, center ,right
                        verticalAlign: "center",  // top, center, bottom
                    },
                    data: [
                        {
                            indexLabel: "{y}%",
                            indexLabelFontColor: "white",
                            indexLabelPlacement: "inside",
                            type: "stackedBar100",
                            color: "rgb(0, 128, 128)",
                            name: "Completed %",
                            showInLegend: true,
                            dataPoints: @Html.Raw(chartModel.ProjectComppletionDataPoints),
                        },
                        {
                            indexLabel: "{y}%",
                            indexLabelFontColor: "white",
                            indexLabelPlacement: "inside",
                            type: "stackedBar100",
                            name: "Remaining %",
                            color: "#a4c4c0",
                            showInLegend: true,
                            dataPoints: @Html.Raw(chartModel.ProjectRemainingDataPoints),
                        }
                    ]
                });


            //for (var i = 0; i < chart.options.data[1].dataPoints.length; i++) {
            //    if (chart.options.data[1].dataPoints[i].y === 0)
            //        chart.options.data[1].dataPoints[i].indexLabel = " ";
            //}

            chart.render();

               @*var chart = new CanvasJS.Chart("@chart8Name",
                {
                    animationEnabled: true,
                    theme: "light2",
                    exportEnabled: true,
                    willReadFrequently: true,
                    axisY: {
                        /*    title: "percentage",*/
                        titleFontColor: "#005983",
                        titleFontSize: 15,
                        interlacedColor: "rgb(255,250,250)",
                        gridColor: "#FFBFD5",
                        gridThickness: 0,
                        labelTextAlign: "left",
                        stripLines: [
                            {
                                value: 0,
                                showOnTop: true,
                                color: "gray",
                                thickness: 0
                            }
                        ]
                    },
                    axisX: {
                        labelFontColor: "#005983",
                        labelFontSize: 10,
                        tickLength: 3,
                        tickThickness: 3,
                        tickColor: "red",
                    },
                    axisY: {
                        tickLength: 3,
                        tickThickness: 3,
                        tickColor: "red",
                    },

                    title: {
                        text: "Monyth Wise Project Flow",
                        fontColor: "white",
                        fontSize: 15,
                        padding: 10,
                        marginBottom: 50,
                        backgroundColor: "rgb(141,182,0)",
                        cornerRadius: 10,
                        fontWeight: "bold"
                    },
                    legend: {
                        horizontalAlign: "right", // left, center ,right
                        verticalAlign: "center",  // top, center, bottom
                    },
                    data:[
                      @Html.Raw(chartModel.ProjectChartsMonthWise.TrimStart('[').TrimEnd(']'))
                    ]

                   });

            //alert("data-length");
            //alert(chart.options.data.length);
          /*  //https://stackoverflow.com/questions/43600285/hiding-labels-for-canvasjs-chart*/

            for (var i = 0; i < chart.options.data[0].dataPoints.length; i++) {
                if (chart.options.data[0].dataPoints[i].y === 0)
                    chart.options.data[0].dataPoints[i].indexLabel = "";
            }


            chart.render();*@

             var chart = new CanvasJS.Chart("@chart9Name",
                {
                    animationEnabled: true,
                    theme: "light2",
                    exportEnabled: true,
                    willReadFrequently: true,
                    axisY: {
                        /*    title: "percentage",*/
                        titleFontColor: "#005983",
                        titleFontSize: 15,
                        interlacedColor: "rgb(255,250,250)",
                        gridColor: "#FFBFD5",
                        gridThickness: 0,
                        labelTextAlign: "left",
                        includeZero: true,
                        labelFontSize: 15,
                        //interlacedColor: "#A0D6B4",
                        //gridColor: "rgba(1,77,101,.1)",
                        stripLines: [
                            {
                                value: 0,
                                showOnTop: true,
                                color: "gray",
                                thickness: 0
                            }
                        ]
                    },
                    axisX: {
                        labelFontColor: "#005983",
                        labelFontSize: 10,
                        tickLength: 3,
                        tickThickness: 3,
                        tickColor: "red",
                    },

                    title: {
                        text: "Monthly Project Progress as of (@Model.SelectedReportMonth.MonthName-@Model.SelectedReportMonth.year)",
                        fontColor: "white",
                        fontSize: 15,
                        padding: 10,
                        marginBottom: 50,
                        backgroundColor: "#0C2D48",
                        cornerRadius: 10,
                        fontWeight: "bold"
                    },
                    legend: {
                        horizontalAlign: "right", // left, center ,right
                        verticalAlign: "center",  // top, center, bottom
                        itemclick: toggleDataSeries,
                        fontSize: 15,
                    },
                    data:[
                      @Html.Raw(chartModel.ProjectChartsMonthWise.TrimStart('[').TrimEnd(']').Replace("stackedBar100", "bar"))
                    ]
                });

            chart.render();

            function toolTipFormatter(e) {
                var str = "";
                var total = 0;
                var str3;
                var str2;
                for (var i = 0; i < e.entries.length; i++) {
                    var str1 = "<span style= \"color:" + e.entries[i].dataSeries.color + "\">" + e.entries[i].dataSeries.name + "</span>: <strong>" + e.entries[i].dataPoint.y + "</strong> <br/>";
                    total = e.entries[i].dataPoint.y + total;
                    str = str.concat(str1);
                }
                str2 = "<strong>" + e.entries[0].dataPoint.label + "</strong> <br/>";
                str3 = "<span style = \"color:Tomato\">Total: </span><strong>" + total + "</strong><br/>";
                return (str2.concat(str)).concat(str3);
            }

            function toggleDataSeries(e) {
                if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                    e.dataSeries.visible = false;
                }
                else {
                    e.dataSeries.visible = true;
                }
                chart.render();
            }

        }

        var hideAuditScripts = "@hideAuditReport";
        if (hideAuditScripts != "hide") {

            var chart = new CanvasJS.Chart("@chart7Name", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Audit Report",
                    fontColor: "rgb(81, 205, 160)",
                    fontSize: 15,
                    padding: 10,
                    margin: 15,
                    backgroundColor: "#005983",
                    cornerRadius: 10,
                    fontWeight: "bold"
                },
                legend: {
                    horizontalAlign: "right",
                    verticalAlign: "center",  // top, center, bottom
                    margin: 30,
                },
                axisX: {
                    labelTextAlign: "left",
                    tickLength: 6,
                    tickThickness: 6,
                    tickColor: "red",
                },
                axisY: {
                    title: "Test count",
                    titleMaxWidth: 400,
                    titleFontWeight: "bold",
                    gridThickness: 0,
                    labelTextAlign: "left",
                    stripLines: [
                        {
                            value: 0,
                            showOnTop: true,
                            color: "gray",
                            thickness: 0
                        }
                    ]
                },

                data: [
                    {
                        type: "column",
                        legendText: "Closed",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        indexLabelFontColor: "rgb(81, 205, 160)",
                        name: "Closed",
                        showInLegend: true,
                        legendMarkerColor: "rgb(81, 205, 160)",
                        color: "rgb(81, 205, 160)",
                        dataPoints: @Html.Raw(chartModel.MSpecifcAudDataoints),
                    },
                    {
                        type: "column",
                        legendText: "Effective",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        name: "Efficient",
                        showInLegend: true,
                        legendMarkerColor: "#005983",
                        color: "#005983",
                        indexLabelFontColor: "#005983",
                        dataPoints: @Html.Raw(chartModel.MSpecifcEffeAudDataoints),
                    },
                    {
                        type: "column",
                        legendText: "In Effective",
                        indexLabel: "{y}",
                        indexLabelFontWeight: "bold",
                        name: "In Efficient",
                        showInLegend: true,

                        legendMarkerColor: "rgb(74, 172, 197)",
                        color: "rgb(74, 172, 197)",
                        indexLabelFontColor: "rgb(74, 172, 197)",
                        dataPoints: @Html.Raw(chartModel.MSpecifcInEffeAudDataoints),
                    }
                ]
            });
            chart.render();
        }


        var chart = new CanvasJS.Chart("@chart10Name", {
            animationEnabled: true,
            backgroundColor: "#005983",
            theme: "light2",
            //title: {
            //    text: "Monthly Attendence Flow",
            //    fontColor: "white",
            //    fontSize: 15,
            //    padding: 10,
            //    margin: 15,
            //    backgroundColor: "#0095a8",
            //    cornerRadius: 10,
            //    fontWeight: "bold"
            //},
            //legend: {
            //    horizontalAlign: "right", // left, center ,right
            //    verticalAlign: "center",  // top, center, bottom
            //    margin: 30,
            //},
            axisX: {
                labelTextAlign: "left",
                tickLength: 6,
                tickThickness: 6,
                tickColor: "red",
                labelFontColor: "white",
            },
            axisY: {
              /*  title: "Attedence %",*/
              /*  titleMaxWidth: 400,*/
                titleFontWeight: "bold",
                gridThickness: 0,
                labelTextAlign: "left",
                labelFontColor: "white",
                stripLines: [
                    {
                        value: 0,
                        showOnTop: true,
                        color: "gray",
                        thickness: 0
                    }
                ]
            },
            data: [

                {
                    type: "line",
                    name: "Attedence",
                    legendText: "Attedence",
                    indexLabel: "{y}%",
                    indexLabelFontWeight: "bold",
                    indexLabelFontColor: "white",
                    legendMarkerColor: "white",
                    color: "white",
                    indexLabelFontSize: 10,
                    markerSize: 12,
                        dataPoints: @Html.Raw(chartModel.PastAttedenceFlowTillDate),
                    }
            ]
        });
        chart.render();

        function toogleDataSeries(e) {
            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                e.dataSeries.visible = false;
            } else {
                e.dataSeries.visible = true;
            }
            chart.render();
        }



    jQuery('.canvasjs-chart-credit').hide();

    //Hidden download graph options by default
    jQuery('.canvasjs-chart-toolbar').hide();
    jQuery('.page-name-title').text(jQuery('.page-name-title-updated').text());

    </script>

}









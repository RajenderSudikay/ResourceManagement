@model ResourceManagement.Models.GraphChartModel

<style>
    .report-content-resource {
        padding-left: 15px;
        padding-top: 20px;
        font-size: small;
    }

    .table-striped-custom tr:nth-of-type(odd) {
        background-color: rgba(72, 113, 248, 0.068);
    }

    .vl {
        border-left: 1px solid rgb(33, 103, 174);
        height: 250px;
        margin-left: 30px;
    }

    .grapgh1firsttd {
        width: 50px !important;
        text-align: center !important;
        font-weight: bold;
        color: white !important;
        border-top: 0px solid #0095a8 !important;
        background-color: white;
    }

    .graph1contenttd {
        text-align: center !important;
     /*   width: 160px !important;*/
        border-left: 1px solid #0095a8 !important;
        border-top: 1px solid #0095a8 !important;
        font-weight: bold !important;
        vertical-align: middle !important;
    }
</style>



<div class="" style="background-color: white; color: #2167ae;">
    <br />
    <img src="~/Assets/AMBC_Logo.png" alt="Header Logo" style="margin-left: 20px" />
    @{
        var clientLogo = "";
        if (Model.AMBC_Active_Emp_view.Client != "AMBC")
        {
            clientLogo = "/Assets/ClientLogos/" + Model.AMBC_Active_Emp_view.Client + ".png";
        }
    }
    @if (clientLogo != "")
    {
        <img src='@clientLogo' style="float: right; margin-right: 20px; width: 200px" />
    }

    <br />

    <div class="container">
        <div class="row">

            <div class="col-md">
                <div style="padding-top: 50px; margin-left: 100px; color: #2167ae !important">
                    <img src="@Model.EmployeeImage" alt="Avatar" style="border-radius: 50%; width: 150px; margin-left: 15px">
                    <h2 style="padding-left: 10px; text-align: center; width: 200px; padding-top: 10px; color: #2167ae !important"><b style="color: #2167ae !important">@Model.AMBC_Active_Emp_view.Employee_Name</b></h2>
                    <div class="report-content-resource">
                        <p style="color: #2167ae !important"><b style="color: #2167ae !important">Reporting Manager:</b> @Model.AMBC_Active_Emp_view.Client_Report_Manager</p>
                    </div>

                </div>
            </div>
            <div class="col-md" style="color: rgb(0, 128, 128) !important; background-color: white; border-radius: 30px; width: 18rem; margin-right: 50px; margin-top: 50px; border: 1px solid rgb(0, 128, 128) ">
                <div style="padding-top: 30px;">
                    <div>
                        <h2 style="font-size: xx-large; color: rgb(0, 128, 128) !important">
                            @Model.AMBC_Active_Emp_view.Client_Project_Name
                        </h2>
                        <h5 style="color: rgb(0, 128, 128) !important ">
                            Project Status Report as of <b style="font-size: initial; color: green !important">@Model.SelectedReportMonth.MonthName @Model.SelectedReportMonth.MonthEndDate@Model.SelectedReportMonth.Suffix, @Model.SelectedReportMonth.year</b>
                        </h5>

                        <div style="display: none" class="page-name-title-updated">@Model.AMBC_Active_Emp_view.Employee_Name @Model.SelectedReportMonth.MonthName @Model.SelectedReportMonth.MonthEndDate@Model.SelectedReportMonth.Suffix, @Model.SelectedReportMonth.year</div>
                    </div>
                </div>
                <hr style="background-color: red !important; height: 2px" />

                <div class="mt-xl-4">
                    <h2><b style="color: rgb(0, 128, 128) !important">Activity Details</b></h2>
                    <ul class="mt-xl-4">
                        @{
                            var activitesDetails = Model.AMBC_Active_Emp_view.Roles_Responsibilities;
                        }

                        @if (!string.IsNullOrWhiteSpace(activitesDetails))
                        {
                            foreach (var activity in activitesDetails.Split('|'))
                            {
                                <li class="" style="color: rgb(0, 128, 128) !important ">@activity</li>
                            }
                        }

                    </ul>
                </div>
            </div>
        </div>
    </div>

</div>

<br />
<div style="background-color: none; padding-top: 30px" />


<div id="chartContainer1" style="height: 250px; width: 60%; display: inline-block; margin-left:150px;"></div>
<table class="table chartContainer1-table" style="width: 60% !important; margin-left: 150px !important; border: 1px solid #0095a8 !important;">
    <tbody>

        @{
            var monthwiseInfosNewlyRaised = Newtonsoft.Json.JsonConvert.DeserializeObject<List<ResourceManagement.Models.Graph1DataPoint.DataPoint>>(ViewBag.MNRTDataPoints);
            var monthwiseInfosOpen = Newtonsoft.Json.JsonConvert.DeserializeObject<List<ResourceManagement.Models.Graph1DataPoint.DataPoint>>(ViewBag.MOTDataPoints);
            var monthwiseInfosClosed = Newtonsoft.Json.JsonConvert.DeserializeObject<List<ResourceManagement.Models.Graph1DataPoint.DataPoint>>(ViewBag.MCTTotalDataPoints);
        }     
        <tr>
            <td class="grapgh1firsttd" style="background-color: rgb(33, 103, 174) !important">Newly Raised</td>
            @foreach (var monthwiseInfonewRaise in monthwiseInfosNewlyRaised)
            {
                <td class="graph1contenttd" style="color: rgb(33, 103, 174) !important;">@monthwiseInfonewRaise.y</td>
            }

        </tr>
        <tr>
            <td class="grapgh1firsttd" style="background-color: rgb(247, 150, 71) !important">Open</td>
            @foreach (var monthwiseInfoOpen in monthwiseInfosOpen)
            {
                <td class="graph1contenttd" style="color: rgb(247, 150, 71) !important;">@monthwiseInfoOpen.y</td>
            }
        </tr>
        <tr>
            <td class="grapgh1firsttd" style="background-color: rgb(81, 205, 160) !important">Closed</td>

            @foreach (var monthwiseInfoClosed in monthwiseInfosClosed)
            {
                <td class="graph1contenttd" style="color: rgb(81, 205, 160) !important; width: 180px !important ">@monthwiseInfoClosed.y</td>
            }
        </tr>
    </tbody>
</table>
<div style="background-color: white; padding-top: 50px;" />


<div id="chartContainer2" style="height: 250px; width: 60%; display: inline-block; margin-left: 30px;"></div>
<div style="background-color: white; padding-top: 50px; border-top: 1px solid green" />


<div id="chartContainer3" style="width: 60%; height: 250px; display: inline-block; margin-left: 30px;"></div>
<div style="background-color: white; padding-top: 90px; border-top: 1px solid green" />
<div id="chartContainer4" style="width: 60%; height: 250px; display: inline-block; padding-left: 0px; margin-left: 30px;"></div>

<div style="background-color: white; padding-top: 50px; border-top: 1px solid green" />
<div id="chartContainer5" style="width: 60%; height: 250px; display: inline-block; margin-left: 30px;"></div>

<div style="background-color: white; padding-top: 100px;" />

<div style="text-align: center; color: white !important; background-color: #2167ae !important; height: 75px; border-radius: 0px; padding-top: 10px;">
    <div style=" text-align:center"><b style="font-size: xx-large; color: white !important;">Thank you...!</b></div>
</div>




<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<script src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>

<script>
           var chart = new CanvasJS.Chart("chartContainer1", {
                animationEnabled: true,
               theme: "light2",
                exportEnabled: true,
                willReadFrequently: true,
                title: {
                    text: "Monthly Report",
                    fontColor: "rgb(33, 103, 174)",
                },
                axisX: {
                    labelTextAlign: "left",
                    tickLength: 10,
                    tickThickness: 10,
                    tickColor: "red",
                },
                axisY: {
                   title: "Incidents count",
                    titleMaxWidth: 400,
                    titleFontWeight: "bold",
                    gridThickness: 0,
                    labelTextAlign: "left",
                    stripLines: [
                        {
                            value: 0,
                            showOnTop: true,
                            color: "gray",
                            thickness: 0
                        }
                    ]
                },

                data: [
                    {
                        type: "column",
                       /* showInLegend: true,*/
                        name: "Newly Raised",
                        legendText: "Newly Raised",
                        //indexLabel: "{y}",
                        //indexLabelFontWeight: "bold",
                        //indexLabelFontColor: "rgb(33, 103, 174)",
                        legendMarkerColor: "rgb(33, 103, 174)",
                        color: "rgb(33, 103, 174)",
                        dataPoints: @Html.Raw(ViewBag.MNRTDataPoints),
                    },
                    {
                        type: "column",
                        legendText: "Open",
                        //indexLabel: "{y}",
                        //indexLabelFontWeight: "bold",
                        //indexLabelFontColor: "rgb(247, 150, 71)",
                        name: "Open",
                    /*    showInLegend: true,*/
                        legendMarkerColor: "rgb(247, 150, 71)",
                        color: "rgb(247, 150, 71)",
                        dataPoints: @Html.Raw(ViewBag.MOTDataPoints),
                    },
                     {
                        type: "column",
                         legendText: "Closed",
                         //indexLabel: "{y}",
                         //indexLabelFontWeight: "bold",
                         //indexLabelFontColor: "rgb(81, 205, 160)",
                         name: "Closed",
                     /*   showInLegend: true,*/
                         legendMarkerColor: "rgb(81, 205, 160)",
                         color: "rgb(81, 205, 160)",
                        dataPoints: @Html.Raw(ViewBag.MCTTotalDataPoints),
                    }
               ]
            });
        chart.render();

        var chart = new CanvasJS.Chart("chartContainer2", {
	        animationEnabled: true,
            theme: "light2",
            exportEnabled: true,
            willReadFrequently: true,
	        title: {
                text: "Monthly Raised Vs Closed",
                fontColor: "rgb(33, 103, 174)",
            },
            axisX: {
                labelTextAlign: "left",
                tickLength: 10,
                tickThickness: 10,
                tickColor: "red"
            },
            axisY: {
               title: "Incidents count",
                titleMaxWidth: 400,
                titleFontWeight: "bold",
                gridThickness: 0,
                labelTextAlign: "left",
                stripLines: [
                    {
                        value: 0,
                        showOnTop: true,
                        color: "gray",
                        thickness: 0
                    }
                ]
            },

            data: [
              {
                    type: "line",
                    indexLabelFontSize: 20,
                    name: "Newly Raised",
                    legendText: "Newly Raised",
                 /*   indexLabelPlacement: "inside",*/
                    indexLabel: "{y}",
                    indexLabelFontWeight: "bold",
                    indexLabelFontColor: "rgb(33, 103, 174)",
                    legendMarkerColor: "rgb(33, 103, 174)",
                    color: "rgb(33, 103, 174)",
                    showInLegend: true,
                    dataPoints: @Html.Raw(ViewBag.MNRTDataPoints),
                },
                 {
                     type: "line",
                     legendText: "Closed",
                     indexLabelOrientation: "horizontal",
                     indexLabel: "{y}",
                     indexLabelFontSize: 12,
                     indexLabelFontWeight: "bolder",
                     indexLabelFontColor: "black",
                     name: "Closed",
                     showInLegend: true,
                     legendMarkerColor: "rgb(81, 205, 160)",
                     color: "rgb(81, 205, 160)",
                    dataPoints: @Html.Raw(ViewBag.MSpecifCTDataPoints),
                }
            ]
        });
    chart.render();

     var chart = new CanvasJS.Chart("chartContainer3", {
	        animationEnabled: true,
            theme: "light2",
            exportEnabled: true,
            willReadFrequently: true,
	        title: {
                text: "Open Tickets",
                fontColor: "rgb(33, 103, 174)",
            },
            axisX: {
                labelTextAlign: "left",
                tickLength: 10,
                tickThickness: 10,
                tickColor: "red"
            },
            axisY: {
               title: "Incidents count",
                titleMaxWidth: 400,
                titleFontWeight: "bold",
                gridThickness: 0,
                labelTextAlign: "left",
                stripLines: [
                    {
                        value: 0,
                        showOnTop: true,
                        color: "gray",
                        thickness: 0
                    }
                ]
            },

            data: [
              {
                    type: "column",
                    showInLegend: true,
                    name: "Critical",
                    legendText: "Critical",
                    indexLabel: "{y}",
                    indexLabelFontWeight: "bold",
                    indexLabelFontColor: "rgb(33, 103, 174)",
                    legendMarkerColor: "rgb(33, 103, 174)",
                    color: "rgb(33, 103, 174)",
                    dataPoints:@Html.Raw(ViewBag.MCRITOTDataPoints),

                },
                 {
                     type: "column",
                     legendText: "High",
                     indexLabel: "{y}",
                     indexLabelFontWeight: "bold",
                     name: "High",
                    showInLegend: true,
                     legendMarkerColor: "rgb(255,215,0)",
                     color: "rgb(255,215,0)",
                     indexLabelFontColor: "rgb(255,215,0)",
                    dataPoints:@Html.Raw(ViewBag.MHIGOTDataPoints),
                },
                  {
                     type: "column",
                     legendText: "Medium",
                     indexLabel: "{y}",
                     indexLabelFontWeight: "bold",
                      name: "Medium",
                    showInLegend: true,
                      legendMarkerColor: "rgb(247, 150, 71)",
                      color: "rgb(247, 150, 71)",
                      indexLabelFontColor: "rgb(247, 150, 71)",
                      dataPoints:@Html.Raw(ViewBag.MMEDIOTDataPoints),
                },
                   {
                     type: "column",
                     legendText: "Low",
                     indexLabel: "{y}",
                     indexLabelFontWeight: "bold",
                    showInLegend: true,
                       legendMarkerColor: "rgb(47, 79, 79)",
                       color: "rgb(47, 79, 79)",
                       indexLabelFontColor: "rgb(47, 79, 79)",
                   dataPoints:@Html.Raw(ViewBag.MLOWOTDataPoints),
                }
            ]
        });
    chart.render();


     var chart = new CanvasJS.Chart("chartContainer4", {
	        animationEnabled: true,
	        theme: "light2",
            exportEnabled: true,
            willReadFrequently: true,
	        title: {
                text: "Incident Closure Trend",
               fontColor: "rgb(33, 103, 174)",
            },
            data: [
              {
                    type: "pie",
                    startAngle: 240,
                    indexLabelFontSize: 12,
                    showInLegend: true,
                    yValueFormatString: "##0.00\"%\"",
                    indexLabel: "{label} {y}",
                    dataPoints: @Html.Raw(ViewBag.ClosedTrend),
                }
            ]
        });
    chart.render();

         var chart = new CanvasJS.Chart("chartContainer5", {
	        animationEnabled: true,
             theme: "light2",
            exportEnabled: true,
            willReadFrequently: true,
	        title: {
                text: "Incidents Summary",
                fontColor: "rgb(33, 103, 174)",
            },
            data: [
              {
                    type: "doughnut",
                    startAngle: 240,
                    reversed: true,
                    indexLabelFontSize: 12,
                    showInLegend: true,
                    yValueFormatString: "##0.00\"%\"",
                    indexLabel: "{label} {y}",
                    dataPoints: @Html.Raw(ViewBag.IncidentsSummary),
                }
            ]
        });
    chart.render();


    jQuery('.canvasjs-chart-credit').hide();

    jQuery('.page-name-title').text(jQuery('.page-name-title-updated').text());

</script>




@model ResourceManagement.Models.RMA_StatusReportModel

@{
    ViewBag.Title = "Status Report Page";
    var imagePath = "";
}

<nav class="navbar navbar-expand-lg nav-bar-bg navbar-inverse navbar-fixed-top">
    <a class="navbar-brand" href="/dashboard"><img src="~/Assets/AMBC_Logo.png" alt="Header Logo" /></a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="time-headertitle" style="padding-left: 69px !important">
        <h2 class="text-uppercase text-white">Status Report</h2>

    </div>

    <div class="col-lg-offset-3">
        @if (Model != null)
        {
            imagePath = "/Assets/EmployeeImagesPNG/" + @Model.RMA_EmployeeModel.AMBC_Active_Emp_view.Employee_ID + ".png";

            <div class="agent-navigation">
                <div class="">
                    <div class="dropdownheading text-white">
                        <div class="profile-img">
                            <img src="@imagePath" class="img-fluid rounded-circle" width="40" alt="Cinque Terre">
                        </div>
                        <p class="agent-full-name">@Model.RMA_EmployeeModel.AMBC_Active_Emp_view.Employee_Name</p>
                    </div>

                    <div class="agent-description hide" style="">
                        <div class="agent-details">
                            <div class="agent-img">
                                <img alt="Bantle_Martin Bantle_625x313" src="@imagePath" data-imagehash="datazwpimghash" loading="lazy">

                            </div>

                            <div class="agent-fullname">
                                <b>@Model.RMA_EmployeeModel.AMBC_Active_Emp_view.Employee_Name</b>
                            </div>
                            <ul>
                                <li>
                                    <img src="~/Assets/Icons/id-card.png" width="30" /> <b>Emp ID:</b>
                                    <div class="agent-navdrop-empid emp-data-nav">@Model.RMA_EmployeeModel.AMBC_Active_Emp_view.Employee_ID</div>
                                </li>
                                <li>
                                    <img src="~/Assets/Icons/graphic-designer.png" width="20" /> &nbsp;&nbsp; <b>Designation:</b>
                                    <div class="agent-navdrop-empdesig emp-data-nav">@Model.RMA_EmployeeModel.AMBC_Active_Emp_view.Designation</div>
                                </li>
                                <li>
                                    <img src="~/Assets/Icons/hierarchical-structure.png" width="20" />&nbsp;&nbsp; <b>Reporting Manager:</b>
                                    <div class="agent-navdrop-empmanager emp-data-nav">@Model.RMA_EmployeeModel.AMBC_Active_Emp_view.Client_Report_Manager</div>
                                </li>
                                <li>
                                    <img src="~/Assets/Icons/phone.png" width="20" />&nbsp;&nbsp;<b>Contact Number:</b>
                                    <br />
                                    <a class="agent-navdrop-phone emp-data-nav" href="tel:07531 282590">@Model.RMA_EmployeeModel.AMBC_Active_Emp_view.Contact_Number</a>
                                </li>
                                <li>
                                    <img src="~/Assets/Icons/woman.png" width="20" />&nbsp;&nbsp;<b>Client:</b>
                                    @if (Model.RMA_EmployeeModel.projectInfo.Count() > 1)
                                    {
                                        var clients = new List<string>();
                                        foreach (var empProject in Model.RMA_EmployeeModel.projectInfo)
                                        {
                                            clients.Add(empProject.Client);
                                        }
                                        var empClients = string.Join(", ", clients);
                                        <div class="agent-navdrop-client emp-data-nav">@empClients</div>

                                    }
                                    else
                                    {
                                        <div class="agent-navdrop-client emp-data-nav">@Model.RMA_EmployeeModel.AMBC_Active_Emp_view.Client</div>
                                    }


                                </li>
                                <li>
                                    <img src="~/Assets/Icons/project.png" width="20" />&nbsp;&nbsp;<b>Project:</b>
                                    @if (Model.RMA_EmployeeModel.projectInfo.Count() > 1)
                                    {
                                        var projects = new List<string>();
                                        foreach (var empProject in Model.RMA_EmployeeModel.projectInfo)
                                        {
                                            var sameProjectExists = false;

                                            foreach (var project in projects)
                                            {
                                                if (project == empProject.Project_Name)
                                                {
                                                    sameProjectExists = true;
                                                }
                                            }

                                            if (!sameProjectExists)
                                            { projects.Add(empProject.Project_Name); }

                                        }
                                        var empProjects = string.Join(", ", projects);
                                        <div class="agent-navdrop-client emp-data-nav">@empProjects</div>

                                    }
                                    else
                                    {
                                        <div class="agent-navdrop-project emp-data-nav">@Model.RMA_EmployeeModel.AMBC_Active_Emp_view.Project_Name</div>
                                    }

                                </li>
                                <li>
                                    <img src="~/Assets/Icons/project-status.png" width="20" />&nbsp;&nbsp;<b>Project Status:</b>
                                    <div class="agent-navdrop-prostatus emp-data-nav">@Model.RMA_EmployeeModel.AMBC_Active_Emp_view.Project_Status</div>
                                </li>
                                <li>
                                    <img src="~/Assets/Icons/email.png" width="20" /> &nbsp;&nbsp;<b>E-Mail Address:</b>
                                    <div class="agent-navdrop-empemail emp-data-nav">@Model.RMA_EmployeeModel.AMBC_Active_Emp_view.AMBC_Mail_Address</div>
                                </li>
                                <li>
                                    <img src="~/Assets/Icons/location.png" width="20" /> &nbsp;&nbsp;<b>Location:</b>
                                    <div class="agent-navdrop-emplocation emp-data-nav">@Model.RMA_EmployeeModel.AMBC_Active_Emp_view.Location</div>
                                </li>
                            </ul>

                        </div>

                        <div class="modal-footer header-nav-modalfooter">
                            <a href="/logout"><img src="~/Assets/Icons/logout.png" width="30" />&nbsp;<b>Logout</b></a>
                        </div>
                    </div>


                </div>
            </div>

            <input type="hidden" class="emprole" value="@Model.RMA_EmployeeModel.AMBC_Active_Emp_view.Access_Role" />

        }

    </div>
</nav>


<div class="card card-body" style="border-radius: 10px">
    <div class="card status-report-card">
        <div class="card-body ">

            <div class="">
                <h4 style="font-size: 1.5rem; text-align: center; background-color: black; padding: 15px; border-radius: 10px; color: white; ">Upload Monthly Status Reports</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @if (Model != null && Model.StatusReportInfo.SuccessMessage != "")
                {
                    <h2 class="text-success">@Model.StatusReportInfo.SuccessMessage</h2>
                    <br />
                }

                @if (Model != null && Model.StatusReportInfo.FailureMessage != "")
                {
                    <h2 class="text-danger">@Model.StatusReportInfo.FailureMessage</h2>
                    <br />

                }
                <form class="needs-validation" novalidate>

                    <div class="form-group row">
                        <label for="StatusReportInfo.EmployeeName" class="control-label col-md-2">Employee Name: <b style="color:red">*</b></label>
                        @Html.DropDownListFor(m => m.StatusReportInfo.EmployeeName, Model.StatusReportInfo.EmployeeList, "Please select employee", new { required = "required", @class = "form-control col-md-3", @style = "background-color: white" })
                        <div class="invalid-feedback employee-invalid-feedback">
                            Please select employee
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="StatusReportInfo.MonthList" class="control-label col-md-2">Select Month: <b style="color:red">*</b></label>
                        @Html.DropDownListFor(m => m.StatusReportInfo.Month, Model.StatusReportInfo.MonthList, "Please select month", new { required = "required", @class = "form-control col-md-3" })
                        <div class="invalid-feedback month-invalid-feedback" style="padding-left:180px">
                            Please select month
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="StatusReportInfo.ExcelPath" class="control-label col-md-2">Upload Report: <b style="color:red">*</b></label>
                        <div class="form-control col-md-3">
                            <input type="file" name="ExcelFile" id="reportupload" required />
                        </div>
                        <div class="invalid-feedback reportupload-invalid-feedback" style="padding-left:180px">
                            Please upload a file
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="reporttype" class="control-label col-md-2">Uploaded Report Type: <b style="color:red">*</b></label>
                        <select id="statusreporttype" name="reporttype" class="form-control col-md-3" required>
                            <option value="Please Select Report Type">Please Select Report Type</option>
                            <option value="Template1">Incident Report</option>
                            <option value="Template2">Project Report</option>
                            <option value="Template3">Test Report</option>
                        </select>

                        <div class="invalid-feedback reporttype-invalid-feedback" style="padding-left:180px">
                            Please select Report Type
                        </div>
                    </div>

                    <div class="dynamic-field-binding">
                        @*<div class="form-group row">
                                <label for="reporttype" class="control-label col-md-2">Uploaded Report Type: <b style="color:red">*</b></label>
                                <select id="statusreporttype" name="reporttype" class="form-control col-md-3" required>
                                    <option value="Please Select Report Type">Please Select Report Type</option>
                                    <option value="Template1">Incident Report</option>
                                    <option value="Template2">Project Report</option>
                                    <option value="Template3">Test Report</option>
                                </select>
                            </div>*@
                    </div>
                    <br />

                    <div class="form-group row">
                        <div class="col-md-offset-2 col-md-10 ">
                            <input type="submit" value="Upload Report" class="btn btn-info btn-lg btn-upload-report" style="border-radius: 10px" />
                        </div>
                    </div>

                </form>
            </div>
        </div>

        <br />
        <br />

    </div>
</div>

<br />
<br />

<script>

    var useRole = jQuery('.emprole').val();
    var empId = jQuery('.agent-navdrop-empid').text();
    $('#StatusReportInfo_EmployeeName  option[value=' + empId + ']').attr("selected", "selected");

    if (useRole == "consultant") {
        $("#StatusReportInfo_EmployeeName").prop("disabled", true);
    }
    else {
        $("#StatusReportInfo_EmployeeName").prop("disabled", false);
    }

    function ExcelFieldMappingTemplate(fieldName) {

        return '<div class="form-group row">'
            + '<label for=' + fieldName + ' class="control-label col-md-2">' + fieldName + ' <b style="color:red">*</b></label>'
            + '<select id=' + fieldName + ' name=' + fieldName + ' class="form-control col-md-3 excel-columns" required>'
            + '<option value="Please Select Excel Column Name">Please Select Excel Column Name</option>'
            + '</select>'
            + '</div>'
    }

    // Create FormData object
    var fileData = new FormData();

    $("#reportupload").change(function () {
        var fileUpload = $("#reportupload").get(0);
        var files = fileUpload.files;

        fileData = new FormData();

        // Looping over all files and add it to FormData object
        for (var i = 0; i < files.length; i++) {
            fileData.append("ExcelFile", files[i]);
        }
    });


    jQuery('#statusreporttype').change(function (evt) {
        jQuery(".dynamic-field-binding").empty();
        var selectedTemplate = jQuery('#statusreporttype :selected').val();

        var dbTemplateFields = [];
        jQuery.getJSON("StatusReports.json", function (data) {
            var selectedTemplateJson = data.filter(v => v.Name === selectedTemplate)[0].fields;
            jQuery.each(selectedTemplateJson, function (key, val) {
                var dynamicTemplate = ExcelFieldMappingTemplate(val);
                var newRow = jQuery(dynamicTemplate);
                jQuery(".dynamic-field-binding").append(jQuery(newRow));
            });
        });

        jQuery.ajax({
            type: "POST",
            url: "/ReadExcelColumnNames",
            contentType: false,
            processData: false,
            data: fileData,
            success: function (data) {
                var coumnNumber = 0;
                jQuery.each(data, function (i, item) {
                    jQuery('.excel-columns').append('<option value="' + item + '">' + i + '</option>');
                    coumnNumber++;
                });
                var naIndexNumber = coumnNumber + 1;
                jQuery('.excel-columns').append('<option value=' + naIndexNumber + '>NA</option>');

            }
        });

    });

    jQuery(document).on("change", ".excel-columns", function () {
        var currentField = jQuery(this);
        var fieldId = currentField.attr("id");
        if (jQuery('#' + fieldId + ' :selected').text() == "Please Select Excel Column Name") {
            jQuery('#' + fieldId + '').css("border", "1px solid red");
            fileValidated = false;
        }
        else {
            jQuery('#' + fieldId + '').css("border", "1px solid green");
        }
    });


    //Final submit post confirmation
    jQuery(".btn-upload-report").click(function () {

        var fileUpload = $("#reportupload").get(0);
        var files = fileUpload.files;

        var fileValidated = true;

        if (fileUpload == null || fileUpload.files == null || fileUpload.files.length == 0) {
            jQuery('#reportupload').css("border", "1px solid red");
            jQuery('.reportupload-invalid-feedback').show();
            fileValidated = false;
        }
        else {
            jQuery('#reportupload').css("border", "1px solid green");
            jQuery('.reportupload-invalid-feedback').hide();
        }

        if (jQuery('#StatusReportInfo_Month :selected').text() == "Please select month") {
            jQuery('#StatusReportInfo_Month').css("border", "1px solid red");
            jQuery('.month-invalid-feedback').show();
            fileValidated = false;
        }
        else {
            jQuery('#StatusReportInfo_Month').css("border", "1px solid green");
            jQuery('.month-invalid-feedback').hide();
        }

        if (jQuery('#statusreporttype :selected').text() == "Please Select Report Type") {
            jQuery('#statusreporttype').css("border", "1px solid red");
            jQuery('.reporttype-invalid-feedback').show();
            fileValidated = false;
        }
        else {
            jQuery('#statusreporttype').css("border", "1px solid green");
            jQuery('.reporttype-invalid-feedback').hide();
        }

        var fieldMapping = jQuery('.excel-columns');
        var excelColumnMappingFieldIndexs = new Array();

        jQuery.each(fieldMapping, function () {
            var currentField = jQuery(this);
            var fieldId = currentField.attr("id");
            if (jQuery('#' + fieldId + ' :selected').text() == "Please Select Excel Column Name") {
                jQuery('#' + fieldId + '').css("border", "1px solid red");
                fileValidated = false;
            }
            else {
                var fieldIndexMappingModel = {
                    FieldName: $(this).siblings('label').text(),
                    Index: jQuery('#' + fieldId + ' :selected').val(),
                }
                excelColumnMappingFieldIndexs.push(fieldIndexMappingModel);
                jQuery('#' + fieldId + '').css("border", "1px solid green");
            }
        });

        if (fileValidated) {

            var empName = jQuery('#StatusReportInfo_EmployeeName :selected').text();
            var EmployeeID = jQuery('#StatusReportInfo_EmployeeName :selected').val();

            fileData.append('EmployeeName', empName);
            fileData.append('EmployeeID', EmployeeID);

            var reportMonth = jQuery('#StatusReportInfo_Month :selected').val();
            fileData.append('Month', reportMonth);

            var fieldIndexJson = JSON.stringify(excelColumnMappingFieldIndexs)

            fileData.append('FieldsIndexJson', fieldIndexJson);

            jQuery.ajax({
                type: "POST",
                url: "/StatusReportsUpload",
                datatype: 'json',
                contentType: false,
                processData: false,
                async: false,
                data: fileData,
                success: function (data) {
                    alert();
                    jQuery('.status-report-card').empty();
                    fileData = new FormData();
                    window.location.href = "/statusreport";
                }
            });
        }
        else {
            return false;
        }
    });    

</script>
